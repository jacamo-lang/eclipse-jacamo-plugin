/*
* generated by Xtext
*/
package jacamoide.xtext.jcm.ui.outline;

import jacamoide.xtext.jcm.jcm.Agent;
import jacamoide.xtext.jcm.jcm.Artifact;
import jacamoide.xtext.jcm.jcm.DAslPath;
import jacamoide.xtext.jcm.jcm.DClassPath;
import jacamoide.xtext.jcm.jcm.DNode;
import jacamoide.xtext.jcm.jcm.DPlatform;
import jacamoide.xtext.jcm.jcm.DUses;
import jacamoide.xtext.jcm.jcm.Group;
import jacamoide.xtext.jcm.jcm.JcmModel;
import jacamoide.xtext.jcm.jcm.OAgents;
import jacamoide.xtext.jcm.jcm.OFileName;
import jacamoide.xtext.jcm.jcm.ONode;
import jacamoide.xtext.jcm.jcm.OOthers;
import jacamoide.xtext.jcm.jcm.Organisation;
import jacamoide.xtext.jcm.jcm.Scheme;
import jacamoide.xtext.jcm.jcm.Workspace;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.PluginImageHelper;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;

import com.google.inject.Inject;

/**
 * customization of the default outline structure
 * 
 */
public class JcmOutlineTreeProvider extends DefaultOutlineTreeProvider {
	@Inject private PluginImageHelper imageHelper;
	
	public JcmOutlineTreeProvider() {
		super();
	}
	
	@Override
	protected boolean _isLeaf(EObject node) {
		return (node instanceof Agent || 
				node instanceof Artifact || 
				node instanceof Scheme ||
				node instanceof ONode ||
				node instanceof OAgents ||
				node instanceof OOthers ||
				node instanceof OFileName ||
				node instanceof DClassPath ||
				node instanceof DAslPath ||
				node instanceof DNode ||
				node instanceof DUses ||
				node instanceof DPlatform);
	}
	
	@Override
	protected Image _image(Object element) {
		if (element instanceof JcmModel) {
			return imageHelper.getImage("jacamo.gif");
		} else if (element instanceof Agent) {
			return imageHelper.getImage("agent.gif");
		} else if (element instanceof Artifact) {
			return imageHelper.getImage("artifact.gif");
		} else if (element instanceof Workspace) {
			return imageHelper.getImage("workspace.gif");
		} else if (element instanceof Organisation) {
			return imageHelper.getImage("organization.gif");
		} else if (element instanceof Scheme) {
			return imageHelper.getImage("scheme.gif");
		} else if (element instanceof Group) {
			return imageHelper.getImage("group.gif");
		} else if (element instanceof DNode || 
				   element instanceof ONode) {
			return imageHelper.getImage("node.gif");
		}

		return super._image(element);
	}
}
