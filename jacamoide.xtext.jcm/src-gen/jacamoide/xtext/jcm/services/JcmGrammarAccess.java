/*
* generated by Xtext
*/
package jacamoide.xtext.jcm.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class JcmGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JcmModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JcmModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cMasKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameATOMTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cUsesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cUsesDUsesParserRuleCall_3_0 = (RuleCall)cUsesAssignment_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cEOLParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cAgentAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAgentAgentParserRuleCall_7_0 = (RuleCall)cAgentAssignment_7.eContents().get(0);
		private final Assignment cWorkspaceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cWorkspaceWorkspaceParserRuleCall_8_0 = (RuleCall)cWorkspaceAssignment_8.eContents().get(0);
		private final Assignment cOrganisationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cOrganisationOrganisationParserRuleCall_9_0 = (RuleCall)cOrganisationAssignment_9.eContents().get(0);
		private final Alternatives cAlternatives_10 = (Alternatives)cGroup.eContents().get(10);
		private final Assignment cDclassPathAssignment_10_0 = (Assignment)cAlternatives_10.eContents().get(0);
		private final RuleCall cDclassPathDClassPathParserRuleCall_10_0_0 = (RuleCall)cDclassPathAssignment_10_0.eContents().get(0);
		private final Assignment cDAslPathAssignment_10_1 = (Assignment)cAlternatives_10.eContents().get(1);
		private final RuleCall cDAslPathDAslPathParserRuleCall_10_1_0 = (RuleCall)cDAslPathAssignment_10_1.eContents().get(0);
		private final Assignment cDPlatformAssignment_10_2 = (Assignment)cAlternatives_10.eContents().get(2);
		private final RuleCall cDPlatformDPlatformParserRuleCall_10_2_0 = (RuleCall)cDPlatformAssignment_10_2.eContents().get(0);
		private final Assignment cDNodeAssignment_10_3 = (Assignment)cAlternatives_10.eContents().get(3);
		private final RuleCall cDNodeDNodeParserRuleCall_10_3_0 = (RuleCall)cDNodeAssignment_10_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final RuleCall cEOLParserRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//JcmModel:
		//	EOL* "mas" name=ATOM uses=DUses? EOL* "{" EOL* agent+=Agent* workspace+=Workspace* organisation+=Organisation*
		//	(dclassPath+=DClassPath | dAslPath+=DAslPath | dPlatform+=DPlatform | dNode+=DNode)* "}" EOL*;
		public ParserRule getRule() { return rule; }

		//EOL* "mas" name=ATOM uses=DUses? EOL* "{" EOL* agent+=Agent* workspace+=Workspace* organisation+=Organisation*
		//(dclassPath+=DClassPath | dAslPath+=DAslPath | dPlatform+=DPlatform | dNode+=DNode)* "}" EOL*
		public Group getGroup() { return cGroup; }

		//EOL*
		public RuleCall getEOLParserRuleCall_0() { return cEOLParserRuleCall_0; }

		//"mas"
		public Keyword getMasKeyword_1() { return cMasKeyword_1; }

		//name=ATOM
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_2_0() { return cNameATOMTerminalRuleCall_2_0; }

		//uses=DUses?
		public Assignment getUsesAssignment_3() { return cUsesAssignment_3; }

		//DUses
		public RuleCall getUsesDUsesParserRuleCall_3_0() { return cUsesDUsesParserRuleCall_3_0; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4() { return cEOLParserRuleCall_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//EOL*
		public RuleCall getEOLParserRuleCall_6() { return cEOLParserRuleCall_6; }

		//agent+=Agent*
		public Assignment getAgentAssignment_7() { return cAgentAssignment_7; }

		//Agent
		public RuleCall getAgentAgentParserRuleCall_7_0() { return cAgentAgentParserRuleCall_7_0; }

		//workspace+=Workspace*
		public Assignment getWorkspaceAssignment_8() { return cWorkspaceAssignment_8; }

		//Workspace
		public RuleCall getWorkspaceWorkspaceParserRuleCall_8_0() { return cWorkspaceWorkspaceParserRuleCall_8_0; }

		//organisation+=Organisation*
		public Assignment getOrganisationAssignment_9() { return cOrganisationAssignment_9; }

		//Organisation
		public RuleCall getOrganisationOrganisationParserRuleCall_9_0() { return cOrganisationOrganisationParserRuleCall_9_0; }

		//(dclassPath+=DClassPath | dAslPath+=DAslPath | dPlatform+=DPlatform | dNode+=DNode)*
		public Alternatives getAlternatives_10() { return cAlternatives_10; }

		//dclassPath+=DClassPath
		public Assignment getDclassPathAssignment_10_0() { return cDclassPathAssignment_10_0; }

		//DClassPath
		public RuleCall getDclassPathDClassPathParserRuleCall_10_0_0() { return cDclassPathDClassPathParserRuleCall_10_0_0; }

		//dAslPath+=DAslPath
		public Assignment getDAslPathAssignment_10_1() { return cDAslPathAssignment_10_1; }

		//DAslPath
		public RuleCall getDAslPathDAslPathParserRuleCall_10_1_0() { return cDAslPathDAslPathParserRuleCall_10_1_0; }

		//dPlatform+=DPlatform
		public Assignment getDPlatformAssignment_10_2() { return cDPlatformAssignment_10_2; }

		//DPlatform
		public RuleCall getDPlatformDPlatformParserRuleCall_10_2_0() { return cDPlatformDPlatformParserRuleCall_10_2_0; }

		//dNode+=DNode
		public Assignment getDNodeAssignment_10_3() { return cDNodeAssignment_10_3; }

		//DNode
		public RuleCall getDNodeDNodeParserRuleCall_10_3_0() { return cDNodeDNodeParserRuleCall_10_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }

		//EOL*
		public RuleCall getEOLParserRuleCall_12() { return cEOLParserRuleCall_12; }
	}

	public class DUsesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DUses");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUsesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFileNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFileNameFileNameParserRuleCall_1_0 = (RuleCall)cFileNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFileNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cFileNameFileNameParserRuleCall_2_1_0 = (RuleCall)cFileNameAssignment_2_1.eContents().get(0);
		
		//DUses:
		//	"uses" fileName+=FileName ("," fileName+=FileName)*;
		public ParserRule getRule() { return rule; }

		//"uses" fileName+=FileName ("," fileName+=FileName)*
		public Group getGroup() { return cGroup; }

		//"uses"
		public Keyword getUsesKeyword_0() { return cUsesKeyword_0; }

		//fileName+=FileName
		public Assignment getFileNameAssignment_1() { return cFileNameAssignment_1; }

		//FileName
		public RuleCall getFileNameFileNameParserRuleCall_1_0() { return cFileNameFileNameParserRuleCall_1_0; }

		//("," fileName+=FileName)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//fileName+=FileName
		public Assignment getFileNameAssignment_2_1() { return cFileNameAssignment_2_1; }

		//FileName
		public RuleCall getFileNameFileNameParserRuleCall_2_1_0() { return cFileNameFileNameParserRuleCall_2_1_0; }
	}

	public class DClassPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DClassPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDClassPathAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClassPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cClassPathAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cClassPathFileNameParserRuleCall_3_0_0 = (RuleCall)cClassPathAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_1_0 = (RuleCall)cAlternatives_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		
		//DClassPath:
		//	{DClassPath} "class-path" ":" (classPath+=FileName (EOL | ",")+)*;
		public ParserRule getRule() { return rule; }

		//{DClassPath} "class-path" ":" (classPath+=FileName (EOL | ",")+)*
		public Group getGroup() { return cGroup; }

		//{DClassPath}
		public Action getDClassPathAction_0() { return cDClassPathAction_0; }

		//"class-path"
		public Keyword getClassPathKeyword_1() { return cClassPathKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(classPath+=FileName (EOL | ",")+)*
		public Group getGroup_3() { return cGroup_3; }

		//classPath+=FileName
		public Assignment getClassPathAssignment_3_0() { return cClassPathAssignment_3_0; }

		//FileName
		public RuleCall getClassPathFileNameParserRuleCall_3_0_0() { return cClassPathFileNameParserRuleCall_3_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_1_0() { return cEOLParserRuleCall_3_1_0; }

		//","
		public Keyword getCommaKeyword_3_1_1() { return cCommaKeyword_3_1_1; }
	}

	public class DAslPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DAslPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDAslPathAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAslPathKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cAslPathAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cAslPathFileNameParserRuleCall_3_0_0 = (RuleCall)cAslPathAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_1_0 = (RuleCall)cAlternatives_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		
		//DAslPath:
		//	{DAslPath} "asl-path" ":" (aslPath+=FileName (EOL | ",")+)*;
		public ParserRule getRule() { return rule; }

		//{DAslPath} "asl-path" ":" (aslPath+=FileName (EOL | ",")+)*
		public Group getGroup() { return cGroup; }

		//{DAslPath}
		public Action getDAslPathAction_0() { return cDAslPathAction_0; }

		//"asl-path"
		public Keyword getAslPathKeyword_1() { return cAslPathKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(aslPath+=FileName (EOL | ",")+)*
		public Group getGroup_3() { return cGroup_3; }

		//aslPath+=FileName
		public Assignment getAslPathAssignment_3_0() { return cAslPathAssignment_3_0; }

		//FileName
		public RuleCall getAslPathFileNameParserRuleCall_3_0_0() { return cAslPathFileNameParserRuleCall_3_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_1_0() { return cEOLParserRuleCall_3_1_0; }

		//","
		public Keyword getCommaKeyword_3_1_1() { return cCommaKeyword_3_1_1; }
	}

	public class DPlatformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DPlatform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDPlatformAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPlatformKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cPlatformAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cPlatformClassDefParserRuleCall_3_0_0 = (RuleCall)cPlatformAssignment_3_0.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_1_0 = (RuleCall)cAlternatives_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		
		//DPlatform:
		//	{DPlatform} "platform" ":" (platform+=ClassDef (EOL | ",")+)*;
		public ParserRule getRule() { return rule; }

		//{DPlatform} "platform" ":" (platform+=ClassDef (EOL | ",")+)*
		public Group getGroup() { return cGroup; }

		//{DPlatform}
		public Action getDPlatformAction_0() { return cDPlatformAction_0; }

		//"platform"
		public Keyword getPlatformKeyword_1() { return cPlatformKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(platform+=ClassDef (EOL | ",")+)*
		public Group getGroup_3() { return cGroup_3; }

		//platform+=ClassDef
		public Assignment getPlatformAssignment_3_0() { return cPlatformAssignment_3_0; }

		//ClassDef
		public RuleCall getPlatformClassDefParserRuleCall_3_0_0() { return cPlatformClassDefParserRuleCall_3_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_1_0() { return cEOLParserRuleCall_3_1_0; }

		//","
		public Keyword getCommaKeyword_3_1_1() { return cCommaKeyword_3_1_1; }
	}

	public class DNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRunningKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommercialAtKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cHostAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cHostHostParserRuleCall_3_1_0 = (RuleCall)cHostAssignment_3_1.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cEOLParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Keyword cCommaKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		
		//DNode:
		//	"node" name=ATOM "running"? ("@" host=Host)? (EOL | ",")+;
		public ParserRule getRule() { return rule; }

		//"node" name=ATOM "running"? ("@" host=Host)? (EOL | ",")+
		public Group getGroup() { return cGroup; }

		//"node"
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//"running"?
		public Keyword getRunningKeyword_2() { return cRunningKeyword_2; }

		//("@" host=Host)?
		public Group getGroup_3() { return cGroup_3; }

		//"@"
		public Keyword getCommercialAtKeyword_3_0() { return cCommercialAtKeyword_3_0; }

		//host=Host
		public Assignment getHostAssignment_3_1() { return cHostAssignment_3_1; }

		//Host
		public RuleCall getHostHostParserRuleCall_3_1_0() { return cHostHostParserRuleCall_3_1_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//EOL
		public RuleCall getEOLParserRuleCall_4_0() { return cEOLParserRuleCall_4_0; }

		//","
		public Keyword getCommaKeyword_4_1() { return cCommaKeyword_4_1; }
	}

	public class AgentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Agent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAgentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSourceAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSourceFileNameParserRuleCall_2_1_0 = (RuleCall)cSourceAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Alternatives cAlternatives_3_2 = (Alternatives)cGroup_3.eContents().get(2);
		private final Group cGroup_3_2_0 = (Group)cAlternatives_3_2.eContents().get(0);
		private final Keyword cInstancesKeyword_3_2_0_0 = (Keyword)cGroup_3_2_0.eContents().get(0);
		private final Keyword cColonKeyword_3_2_0_1 = (Keyword)cGroup_3_2_0.eContents().get(1);
		private final Alternatives cAlternatives_3_2_0_2 = (Alternatives)cGroup_3_2_0.eContents().get(2);
		private final Group cGroup_3_2_0_2_0 = (Group)cAlternatives_3_2_0_2.eContents().get(0);
		private final Assignment cInstancesAssignment_3_2_0_2_0_0 = (Assignment)cGroup_3_2_0_2_0.eContents().get(0);
		private final RuleCall cInstancesINT_LITERALTerminalRuleCall_3_2_0_2_0_0_0 = (RuleCall)cInstancesAssignment_3_2_0_2_0_0.eContents().get(0);
		private final Alternatives cAlternatives_3_2_0_2_0_1 = (Alternatives)cGroup_3_2_0_2_0.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_0_2_0_1_0 = (RuleCall)cAlternatives_3_2_0_2_0_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_0_2_0_1_1 = (Keyword)cAlternatives_3_2_0_2_0_1.eContents().get(1);
		private final Group cGroup_3_2_0_2_1 = (Group)cAlternatives_3_2_0_2.eContents().get(1);
		private final Assignment cInstancesAtomAssignment_3_2_0_2_1_0 = (Assignment)cGroup_3_2_0_2_1.eContents().get(0);
		private final RuleCall cInstancesAtomATOMTerminalRuleCall_3_2_0_2_1_0_0 = (RuleCall)cInstancesAtomAssignment_3_2_0_2_1_0.eContents().get(0);
		private final Alternatives cAlternatives_3_2_0_2_1_1 = (Alternatives)cGroup_3_2_0_2_1.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_0_2_1_1_0 = (RuleCall)cAlternatives_3_2_0_2_1_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_0_2_1_1_1 = (Keyword)cAlternatives_3_2_0_2_1_1.eContents().get(1);
		private final Group cGroup_3_2_1 = (Group)cAlternatives_3_2.eContents().get(1);
		private final Keyword cNodeKeyword_3_2_1_0 = (Keyword)cGroup_3_2_1.eContents().get(0);
		private final Keyword cColonKeyword_3_2_1_1 = (Keyword)cGroup_3_2_1.eContents().get(1);
		private final Assignment cNodeAssignment_3_2_1_2 = (Assignment)cGroup_3_2_1.eContents().get(2);
		private final RuleCall cNodeATOMTerminalRuleCall_3_2_1_2_0 = (RuleCall)cNodeAssignment_3_2_1_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_1_3 = (RuleCall)cGroup_3_2_1.eContents().get(3);
		private final Group cGroup_3_2_2 = (Group)cAlternatives_3_2.eContents().get(2);
		private final Keyword cAgArchKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Keyword cColonKeyword_3_2_2_1 = (Keyword)cGroup_3_2_2.eContents().get(1);
		private final Group cGroup_3_2_2_2 = (Group)cGroup_3_2_2.eContents().get(2);
		private final Assignment cAgArchAssignment_3_2_2_2_0 = (Assignment)cGroup_3_2_2_2.eContents().get(0);
		private final RuleCall cAgArchClassDefParserRuleCall_3_2_2_2_0_0 = (RuleCall)cAgArchAssignment_3_2_2_2_0.eContents().get(0);
		private final Alternatives cAlternatives_3_2_2_2_1 = (Alternatives)cGroup_3_2_2_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_2_2_1_0 = (RuleCall)cAlternatives_3_2_2_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_2_2_1_1 = (Keyword)cAlternatives_3_2_2_2_1.eContents().get(1);
		private final Group cGroup_3_2_3 = (Group)cAlternatives_3_2.eContents().get(3);
		private final Keyword cAgClassKeyword_3_2_3_0 = (Keyword)cGroup_3_2_3.eContents().get(0);
		private final Keyword cColonKeyword_3_2_3_1 = (Keyword)cGroup_3_2_3.eContents().get(1);
		private final Assignment cAgClassAssignment_3_2_3_2 = (Assignment)cGroup_3_2_3.eContents().get(2);
		private final RuleCall cAgClassClassDefParserRuleCall_3_2_3_2_0 = (RuleCall)cAgClassAssignment_3_2_3_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_3_3 = (RuleCall)cGroup_3_2_3.eContents().get(3);
		private final Group cGroup_3_2_4 = (Group)cAlternatives_3_2.eContents().get(4);
		private final Keyword cAgBbClassKeyword_3_2_4_0 = (Keyword)cGroup_3_2_4.eContents().get(0);
		private final Keyword cColonKeyword_3_2_4_1 = (Keyword)cGroup_3_2_4.eContents().get(1);
		private final Assignment cAgbbClassAssignment_3_2_4_2 = (Assignment)cGroup_3_2_4.eContents().get(2);
		private final RuleCall cAgbbClassClassDefParserRuleCall_3_2_4_2_0 = (RuleCall)cAgbbClassAssignment_3_2_4_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_4_3 = (RuleCall)cGroup_3_2_4.eContents().get(3);
		private final Group cGroup_3_2_5 = (Group)cAlternatives_3_2.eContents().get(5);
		private final Keyword cBeliefsKeyword_3_2_5_0 = (Keyword)cGroup_3_2_5.eContents().get(0);
		private final Keyword cColonKeyword_3_2_5_1 = (Keyword)cGroup_3_2_5.eContents().get(1);
		private final Group cGroup_3_2_5_2 = (Group)cGroup_3_2_5.eContents().get(2);
		private final Assignment cBeliefsAssignment_3_2_5_2_0 = (Assignment)cGroup_3_2_5_2.eContents().get(0);
		private final RuleCall cBeliefsLiteralParserRuleCall_3_2_5_2_0_0 = (RuleCall)cBeliefsAssignment_3_2_5_2_0.eContents().get(0);
		private final Alternatives cAlternatives_3_2_5_2_1 = (Alternatives)cGroup_3_2_5_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_5_2_1_0 = (RuleCall)cAlternatives_3_2_5_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_5_2_1_1 = (Keyword)cAlternatives_3_2_5_2_1.eContents().get(1);
		private final Group cGroup_3_2_6 = (Group)cAlternatives_3_2.eContents().get(6);
		private final Keyword cGoalsKeyword_3_2_6_0 = (Keyword)cGroup_3_2_6.eContents().get(0);
		private final Keyword cColonKeyword_3_2_6_1 = (Keyword)cGroup_3_2_6.eContents().get(1);
		private final Group cGroup_3_2_6_2 = (Group)cGroup_3_2_6.eContents().get(2);
		private final Assignment cGoalsAssignment_3_2_6_2_0 = (Assignment)cGroup_3_2_6_2.eContents().get(0);
		private final RuleCall cGoalsLiteralParserRuleCall_3_2_6_2_0_0 = (RuleCall)cGoalsAssignment_3_2_6_2_0.eContents().get(0);
		private final Alternatives cAlternatives_3_2_6_2_1 = (Alternatives)cGroup_3_2_6_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_6_2_1_0 = (RuleCall)cAlternatives_3_2_6_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_6_2_1_1 = (Keyword)cAlternatives_3_2_6_2_1.eContents().get(1);
		private final Group cGroup_3_2_7 = (Group)cAlternatives_3_2.eContents().get(7);
		private final Keyword cFocusKeyword_3_2_7_0 = (Keyword)cGroup_3_2_7.eContents().get(0);
		private final Keyword cColonKeyword_3_2_7_1 = (Keyword)cGroup_3_2_7.eContents().get(1);
		private final Group cGroup_3_2_7_2 = (Group)cGroup_3_2_7.eContents().get(2);
		private final Assignment cFocusAssignment_3_2_7_2_0 = (Assignment)cGroup_3_2_7_2.eContents().get(0);
		private final RuleCall cFocusATOMTerminalRuleCall_3_2_7_2_0_0 = (RuleCall)cFocusAssignment_3_2_7_2_0.eContents().get(0);
		private final Group cGroup_3_2_7_2_1 = (Group)cGroup_3_2_7_2.eContents().get(1);
		private final Keyword cCommercialAtKeyword_3_2_7_2_1_0 = (Keyword)cGroup_3_2_7_2_1.eContents().get(0);
		private final Assignment cFocusNodeAssignment_3_2_7_2_1_1 = (Assignment)cGroup_3_2_7_2_1.eContents().get(1);
		private final RuleCall cFocusNodeATOMTerminalRuleCall_3_2_7_2_1_1_0 = (RuleCall)cFocusNodeAssignment_3_2_7_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3_2_7_2_2 = (Alternatives)cGroup_3_2_7_2.eContents().get(2);
		private final RuleCall cEOLParserRuleCall_3_2_7_2_2_0 = (RuleCall)cAlternatives_3_2_7_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_7_2_2_1 = (Keyword)cAlternatives_3_2_7_2_2.eContents().get(1);
		private final Group cGroup_3_2_8 = (Group)cAlternatives_3_2.eContents().get(8);
		private final Keyword cJoinKeyword_3_2_8_0 = (Keyword)cGroup_3_2_8.eContents().get(0);
		private final Keyword cColonKeyword_3_2_8_1 = (Keyword)cGroup_3_2_8.eContents().get(1);
		private final Group cGroup_3_2_8_2 = (Group)cGroup_3_2_8.eContents().get(2);
		private final Assignment cJoinAssignment_3_2_8_2_0 = (Assignment)cGroup_3_2_8_2.eContents().get(0);
		private final RuleCall cJoinATOMTerminalRuleCall_3_2_8_2_0_0 = (RuleCall)cJoinAssignment_3_2_8_2_0.eContents().get(0);
		private final Group cGroup_3_2_8_2_1 = (Group)cGroup_3_2_8_2.eContents().get(1);
		private final Keyword cCommercialAtKeyword_3_2_8_2_1_0 = (Keyword)cGroup_3_2_8_2_1.eContents().get(0);
		private final Assignment cJoinNodeAssignment_3_2_8_2_1_1 = (Assignment)cGroup_3_2_8_2_1.eContents().get(1);
		private final RuleCall cJoinNodeATOMTerminalRuleCall_3_2_8_2_1_1_0 = (RuleCall)cJoinNodeAssignment_3_2_8_2_1_1.eContents().get(0);
		private final Alternatives cAlternatives_3_2_8_2_2 = (Alternatives)cGroup_3_2_8_2.eContents().get(2);
		private final RuleCall cEOLParserRuleCall_3_2_8_2_2_0 = (RuleCall)cAlternatives_3_2_8_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_8_2_2_1 = (Keyword)cAlternatives_3_2_8_2_2.eContents().get(1);
		private final Group cGroup_3_2_9 = (Group)cAlternatives_3_2.eContents().get(9);
		private final Keyword cRolesKeyword_3_2_9_0 = (Keyword)cGroup_3_2_9.eContents().get(0);
		private final Keyword cColonKeyword_3_2_9_1 = (Keyword)cGroup_3_2_9.eContents().get(1);
		private final Group cGroup_3_2_9_2 = (Group)cGroup_3_2_9.eContents().get(2);
		private final Assignment cRoleAssignment_3_2_9_2_0 = (Assignment)cGroup_3_2_9_2.eContents().get(0);
		private final RuleCall cRoleATOMTerminalRuleCall_3_2_9_2_0_0 = (RuleCall)cRoleAssignment_3_2_9_2_0.eContents().get(0);
		private final Keyword cInKeyword_3_2_9_2_1 = (Keyword)cGroup_3_2_9_2.eContents().get(1);
		private final Assignment cGroupAssignment_3_2_9_2_2 = (Assignment)cGroup_3_2_9_2.eContents().get(2);
		private final RuleCall cGroupATOMTerminalRuleCall_3_2_9_2_2_0 = (RuleCall)cGroupAssignment_3_2_9_2_2.eContents().get(0);
		private final Group cGroup_3_2_9_2_3 = (Group)cGroup_3_2_9_2.eContents().get(3);
		private final Keyword cCommercialAtKeyword_3_2_9_2_3_0 = (Keyword)cGroup_3_2_9_2_3.eContents().get(0);
		private final Assignment cGroupNodeAssignment_3_2_9_2_3_1 = (Assignment)cGroup_3_2_9_2_3.eContents().get(1);
		private final RuleCall cGroupNodeATOMTerminalRuleCall_3_2_9_2_3_1_0 = (RuleCall)cGroupNodeAssignment_3_2_9_2_3_1.eContents().get(0);
		private final Alternatives cAlternatives_3_2_9_2_4 = (Alternatives)cGroup_3_2_9_2.eContents().get(4);
		private final RuleCall cEOLParserRuleCall_3_2_9_2_4_0 = (RuleCall)cAlternatives_3_2_9_2_4.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_9_2_4_1 = (Keyword)cAlternatives_3_2_9_2_4.eContents().get(1);
		private final Group cGroup_3_2_10 = (Group)cAlternatives_3_2.eContents().get(10);
		private final Keyword cDebugKeyword_3_2_10_0 = (Keyword)cGroup_3_2_10.eContents().get(0);
		private final Keyword cColonKeyword_3_2_10_1 = (Keyword)cGroup_3_2_10.eContents().get(1);
		private final Assignment cDebugAssignment_3_2_10_2 = (Assignment)cGroup_3_2_10.eContents().get(2);
		private final RuleCall cDebugLiteralParserRuleCall_3_2_10_2_0 = (RuleCall)cDebugAssignment_3_2_10_2.eContents().get(0);
		private final Alternatives cAlternatives_3_2_10_3 = (Alternatives)cGroup_3_2_10.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_3_2_10_3_0 = (RuleCall)cAlternatives_3_2_10_3.eContents().get(0);
		private final Keyword cCommaKeyword_3_2_10_3_1 = (Keyword)cAlternatives_3_2_10_3.eContents().get(1);
		private final Group cGroup_3_2_11 = (Group)cAlternatives_3_2.eContents().get(11);
		private final Keyword cVerboseKeyword_3_2_11_0 = (Keyword)cGroup_3_2_11.eContents().get(0);
		private final Keyword cColonKeyword_3_2_11_1 = (Keyword)cGroup_3_2_11.eContents().get(1);
		private final Assignment cVerboseAssignment_3_2_11_2 = (Assignment)cGroup_3_2_11.eContents().get(2);
		private final RuleCall cVerboseINT_LITERALTerminalRuleCall_3_2_11_2_0 = (RuleCall)cVerboseAssignment_3_2_11_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_11_3 = (RuleCall)cGroup_3_2_11.eContents().get(3);
		private final Group cGroup_3_2_12 = (Group)cAlternatives_3_2.eContents().get(12);
		private final Keyword cNrcbpKeyword_3_2_12_0 = (Keyword)cGroup_3_2_12.eContents().get(0);
		private final Keyword cColonKeyword_3_2_12_1 = (Keyword)cGroup_3_2_12.eContents().get(1);
		private final Assignment cNrcbpAssignment_3_2_12_2 = (Assignment)cGroup_3_2_12.eContents().get(2);
		private final RuleCall cNrcbpINT_LITERALTerminalRuleCall_3_2_12_2_0 = (RuleCall)cNrcbpAssignment_3_2_12_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_12_3 = (RuleCall)cGroup_3_2_12.eContents().get(3);
		private final Group cGroup_3_2_13 = (Group)cAlternatives_3_2.eContents().get(13);
		private final Keyword cEventsKeyword_3_2_13_0 = (Keyword)cGroup_3_2_13.eContents().get(0);
		private final Keyword cColonKeyword_3_2_13_1 = (Keyword)cGroup_3_2_13.eContents().get(1);
		private final Alternatives cAlternatives_3_2_13_2 = (Alternatives)cGroup_3_2_13.eContents().get(2);
		private final Keyword cDiscardKeyword_3_2_13_2_0 = (Keyword)cAlternatives_3_2_13_2.eContents().get(0);
		private final Keyword cRequeueKeyword_3_2_13_2_1 = (Keyword)cAlternatives_3_2_13_2.eContents().get(1);
		private final Keyword cRetrieveKeyword_3_2_13_2_2 = (Keyword)cAlternatives_3_2_13_2.eContents().get(2);
		private final RuleCall cEOLParserRuleCall_3_2_13_3 = (RuleCall)cGroup_3_2_13.eContents().get(3);
		private final Group cGroup_3_2_14 = (Group)cAlternatives_3_2.eContents().get(14);
		private final Keyword cIntBelsKeyword_3_2_14_0 = (Keyword)cGroup_3_2_14.eContents().get(0);
		private final Keyword cColonKeyword_3_2_14_1 = (Keyword)cGroup_3_2_14.eContents().get(1);
		private final Alternatives cAlternatives_3_2_14_2 = (Alternatives)cGroup_3_2_14.eContents().get(2);
		private final Keyword cSameFocusKeyword_3_2_14_2_0 = (Keyword)cAlternatives_3_2_14_2.eContents().get(0);
		private final Keyword cNewFocusKeyword_3_2_14_2_1 = (Keyword)cAlternatives_3_2_14_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_2_14_3 = (RuleCall)cGroup_3_2_14.eContents().get(3);
		private final Group cGroup_3_2_15 = (Group)cAlternatives_3_2.eContents().get(15);
		private final Assignment cOtherAssignment_3_2_15_0 = (Assignment)cGroup_3_2_15.eContents().get(0);
		private final RuleCall cOtherATOMTerminalRuleCall_3_2_15_0_0 = (RuleCall)cOtherAssignment_3_2_15_0.eContents().get(0);
		private final Keyword cColonKeyword_3_2_15_1 = (Keyword)cGroup_3_2_15.eContents().get(1);
		private final Alternatives cAlternatives_3_2_15_2 = (Alternatives)cGroup_3_2_15.eContents().get(2);
		private final Assignment cStringAssignment_3_2_15_2_0 = (Assignment)cAlternatives_3_2_15_2.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_3_2_15_2_0_0 = (RuleCall)cStringAssignment_3_2_15_2_0.eContents().get(0);
		private final Assignment cValAssignment_3_2_15_2_1 = (Assignment)cAlternatives_3_2_15_2.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_3_2_15_2_1_0 = (RuleCall)cValAssignment_3_2_15_2_1.eContents().get(0);
		private final Assignment cLiteralAssignment_3_2_15_2_2 = (Assignment)cAlternatives_3_2_15_2.eContents().get(2);
		private final RuleCall cLiteralLiteralParserRuleCall_3_2_15_2_2_0 = (RuleCall)cLiteralAssignment_3_2_15_2_2.eContents().get(0);
		private final Assignment cVal_realAssignment_3_2_15_2_3 = (Assignment)cAlternatives_3_2_15_2.eContents().get(3);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_3_2_15_2_3_0 = (RuleCall)cVal_realAssignment_3_2_15_2_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3_2_15_3 = (RuleCall)cGroup_3_2_15.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Agent:
		//	"agent" name=ATOM (":" source+=FileName)? ("{" EOL* ("instances" ":" (instances+=INT_LITERAL (EOL | ",")+ |
		//	(instancesAtom+=ATOM (EOL | ",")+)*) | "node" ":" node+=ATOM EOL+ | "ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)* |
		//	"ag-class" ":" agClass+=ClassDef EOL+ | "ag-bb-class" ":" agbbClass+=ClassDef EOL+ | "beliefs" ":" (beliefs+=Literal
		//	(EOL | ",")+)* | "goals" ":" (goals+=Literal (EOL | ",")+)* | "focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL |
		//	",")+)* | "join" ":" (join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)* | "roles" ":" (role+=ATOM "in" group+=ATOM ("@"
		//	groupNode+=ATOM)? (EOL | ",")+)* | "debug" ":" debug+=Literal (EOL | ",")+ | "verbose" ":" verbose+=INT_LITERAL EOL+ |
		//	"nrcbp" ":" nrcbp+=INT_LITERAL EOL+ | "events" ":" ("discard" | "requeue" | "retrieve") EOL+ | "intBels" ":"
		//	("sameFocus" | "newFocus") EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal |
		//	val_real+=REAL_LITERAL) EOL+)* "}")? EOL*;
		public ParserRule getRule() { return rule; }

		//"agent" name=ATOM (":" source+=FileName)? ("{" EOL* ("instances" ":" (instances+=INT_LITERAL (EOL | ",")+ |
		//(instancesAtom+=ATOM (EOL | ",")+)*) | "node" ":" node+=ATOM EOL+ | "ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)* |
		//"ag-class" ":" agClass+=ClassDef EOL+ | "ag-bb-class" ":" agbbClass+=ClassDef EOL+ | "beliefs" ":" (beliefs+=Literal
		//(EOL | ",")+)* | "goals" ":" (goals+=Literal (EOL | ",")+)* | "focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL |
		//",")+)* | "join" ":" (join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)* | "roles" ":" (role+=ATOM "in" group+=ATOM ("@"
		//groupNode+=ATOM)? (EOL | ",")+)* | "debug" ":" debug+=Literal (EOL | ",")+ | "verbose" ":" verbose+=INT_LITERAL EOL+ |
		//"nrcbp" ":" nrcbp+=INT_LITERAL EOL+ | "events" ":" ("discard" | "requeue" | "retrieve") EOL+ | "intBels" ":"
		//("sameFocus" | "newFocus") EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal |
		//val_real+=REAL_LITERAL) EOL+)* "}")? EOL*
		public Group getGroup() { return cGroup; }

		//"agent"
		public Keyword getAgentKeyword_0() { return cAgentKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//(":" source+=FileName)?
		public Group getGroup_2() { return cGroup_2; }

		//":"
		public Keyword getColonKeyword_2_0() { return cColonKeyword_2_0; }

		//source+=FileName
		public Assignment getSourceAssignment_2_1() { return cSourceAssignment_2_1; }

		//FileName
		public RuleCall getSourceFileNameParserRuleCall_2_1_0() { return cSourceFileNameParserRuleCall_2_1_0; }

		//("{" EOL* ("instances" ":" (instances+=INT_LITERAL (EOL | ",")+ | (instancesAtom+=ATOM (EOL | ",")+)*) | "node" ":"
		//node+=ATOM EOL+ | "ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)* | "ag-class" ":" agClass+=ClassDef EOL+ |
		//"ag-bb-class" ":" agbbClass+=ClassDef EOL+ | "beliefs" ":" (beliefs+=Literal (EOL | ",")+)* | "goals" ":"
		//(goals+=Literal (EOL | ",")+)* | "focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL | ",")+)* | "join" ":"
		//(join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)* | "roles" ":" (role+=ATOM "in" group+=ATOM ("@" groupNode+=ATOM)? (EOL
		//| ",")+)* | "debug" ":" debug+=Literal (EOL | ",")+ | "verbose" ":" verbose+=INT_LITERAL EOL+ | "nrcbp" ":"
		//nrcbp+=INT_LITERAL EOL+ | "events" ":" ("discard" | "requeue" | "retrieve") EOL+ | "intBels" ":" ("sameFocus" |
		//"newFocus") EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL)
		//EOL+)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//EOL*
		public RuleCall getEOLParserRuleCall_3_1() { return cEOLParserRuleCall_3_1; }

		//("instances" ":" (instances+=INT_LITERAL (EOL | ",")+ | (instancesAtom+=ATOM (EOL | ",")+)*) | "node" ":" node+=ATOM
		//EOL+ | "ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)* | "ag-class" ":" agClass+=ClassDef EOL+ | "ag-bb-class" ":"
		//agbbClass+=ClassDef EOL+ | "beliefs" ":" (beliefs+=Literal (EOL | ",")+)* | "goals" ":" (goals+=Literal (EOL | ",")+)*
		//| "focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL | ",")+)* | "join" ":" (join+=ATOM ("@" joinNode+=ATOM)? (EOL |
		//",")+)* | "roles" ":" (role+=ATOM "in" group+=ATOM ("@" groupNode+=ATOM)? (EOL | ",")+)* | "debug" ":" debug+=Literal
		//(EOL | ",")+ | "verbose" ":" verbose+=INT_LITERAL EOL+ | "nrcbp" ":" nrcbp+=INT_LITERAL EOL+ | "events" ":" ("discard"
		//| "requeue" | "retrieve") EOL+ | "intBels" ":" ("sameFocus" | "newFocus") EOL+ | other+=ATOM ":" (string+=STRING |
		//val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+)*
		public Alternatives getAlternatives_3_2() { return cAlternatives_3_2; }

		//"instances" ":" (instances+=INT_LITERAL (EOL | ",")+ | (instancesAtom+=ATOM (EOL | ",")+)*)
		public Group getGroup_3_2_0() { return cGroup_3_2_0; }

		//"instances"
		public Keyword getInstancesKeyword_3_2_0_0() { return cInstancesKeyword_3_2_0_0; }

		//":"
		public Keyword getColonKeyword_3_2_0_1() { return cColonKeyword_3_2_0_1; }

		//instances+=INT_LITERAL (EOL | ",")+ | (instancesAtom+=ATOM (EOL | ",")+)*
		public Alternatives getAlternatives_3_2_0_2() { return cAlternatives_3_2_0_2; }

		//instances+=INT_LITERAL (EOL | ",")+
		public Group getGroup_3_2_0_2_0() { return cGroup_3_2_0_2_0; }

		//instances+=INT_LITERAL
		public Assignment getInstancesAssignment_3_2_0_2_0_0() { return cInstancesAssignment_3_2_0_2_0_0; }

		//INT_LITERAL
		public RuleCall getInstancesINT_LITERALTerminalRuleCall_3_2_0_2_0_0_0() { return cInstancesINT_LITERALTerminalRuleCall_3_2_0_2_0_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_0_2_0_1() { return cAlternatives_3_2_0_2_0_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_0_2_0_1_0() { return cEOLParserRuleCall_3_2_0_2_0_1_0; }

		//","
		public Keyword getCommaKeyword_3_2_0_2_0_1_1() { return cCommaKeyword_3_2_0_2_0_1_1; }

		//(instancesAtom+=ATOM (EOL | ",")+)*
		public Group getGroup_3_2_0_2_1() { return cGroup_3_2_0_2_1; }

		//instancesAtom+=ATOM
		public Assignment getInstancesAtomAssignment_3_2_0_2_1_0() { return cInstancesAtomAssignment_3_2_0_2_1_0; }

		//ATOM
		public RuleCall getInstancesAtomATOMTerminalRuleCall_3_2_0_2_1_0_0() { return cInstancesAtomATOMTerminalRuleCall_3_2_0_2_1_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_0_2_1_1() { return cAlternatives_3_2_0_2_1_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_0_2_1_1_0() { return cEOLParserRuleCall_3_2_0_2_1_1_0; }

		//","
		public Keyword getCommaKeyword_3_2_0_2_1_1_1() { return cCommaKeyword_3_2_0_2_1_1_1; }

		//"node" ":" node+=ATOM EOL+
		public Group getGroup_3_2_1() { return cGroup_3_2_1; }

		//"node"
		public Keyword getNodeKeyword_3_2_1_0() { return cNodeKeyword_3_2_1_0; }

		//":"
		public Keyword getColonKeyword_3_2_1_1() { return cColonKeyword_3_2_1_1; }

		//node+=ATOM
		public Assignment getNodeAssignment_3_2_1_2() { return cNodeAssignment_3_2_1_2; }

		//ATOM
		public RuleCall getNodeATOMTerminalRuleCall_3_2_1_2_0() { return cNodeATOMTerminalRuleCall_3_2_1_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_1_3() { return cEOLParserRuleCall_3_2_1_3; }

		//"ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)*
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }

		//"ag-arch"
		public Keyword getAgArchKeyword_3_2_2_0() { return cAgArchKeyword_3_2_2_0; }

		//":"
		public Keyword getColonKeyword_3_2_2_1() { return cColonKeyword_3_2_2_1; }

		//(agArch+=ClassDef (EOL | ",")+)*
		public Group getGroup_3_2_2_2() { return cGroup_3_2_2_2; }

		//agArch+=ClassDef
		public Assignment getAgArchAssignment_3_2_2_2_0() { return cAgArchAssignment_3_2_2_2_0; }

		//ClassDef
		public RuleCall getAgArchClassDefParserRuleCall_3_2_2_2_0_0() { return cAgArchClassDefParserRuleCall_3_2_2_2_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_2_2_1() { return cAlternatives_3_2_2_2_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_2_2_1_0() { return cEOLParserRuleCall_3_2_2_2_1_0; }

		//","
		public Keyword getCommaKeyword_3_2_2_2_1_1() { return cCommaKeyword_3_2_2_2_1_1; }

		//"ag-class" ":" agClass+=ClassDef EOL+
		public Group getGroup_3_2_3() { return cGroup_3_2_3; }

		//"ag-class"
		public Keyword getAgClassKeyword_3_2_3_0() { return cAgClassKeyword_3_2_3_0; }

		//":"
		public Keyword getColonKeyword_3_2_3_1() { return cColonKeyword_3_2_3_1; }

		//agClass+=ClassDef
		public Assignment getAgClassAssignment_3_2_3_2() { return cAgClassAssignment_3_2_3_2; }

		//ClassDef
		public RuleCall getAgClassClassDefParserRuleCall_3_2_3_2_0() { return cAgClassClassDefParserRuleCall_3_2_3_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_3_3() { return cEOLParserRuleCall_3_2_3_3; }

		//"ag-bb-class" ":" agbbClass+=ClassDef EOL+
		public Group getGroup_3_2_4() { return cGroup_3_2_4; }

		//"ag-bb-class"
		public Keyword getAgBbClassKeyword_3_2_4_0() { return cAgBbClassKeyword_3_2_4_0; }

		//":"
		public Keyword getColonKeyword_3_2_4_1() { return cColonKeyword_3_2_4_1; }

		//agbbClass+=ClassDef
		public Assignment getAgbbClassAssignment_3_2_4_2() { return cAgbbClassAssignment_3_2_4_2; }

		//ClassDef
		public RuleCall getAgbbClassClassDefParserRuleCall_3_2_4_2_0() { return cAgbbClassClassDefParserRuleCall_3_2_4_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_4_3() { return cEOLParserRuleCall_3_2_4_3; }

		//"beliefs" ":" (beliefs+=Literal (EOL | ",")+)*
		public Group getGroup_3_2_5() { return cGroup_3_2_5; }

		//"beliefs"
		public Keyword getBeliefsKeyword_3_2_5_0() { return cBeliefsKeyword_3_2_5_0; }

		//":"
		public Keyword getColonKeyword_3_2_5_1() { return cColonKeyword_3_2_5_1; }

		//(beliefs+=Literal (EOL | ",")+)*
		public Group getGroup_3_2_5_2() { return cGroup_3_2_5_2; }

		//beliefs+=Literal
		public Assignment getBeliefsAssignment_3_2_5_2_0() { return cBeliefsAssignment_3_2_5_2_0; }

		//Literal
		public RuleCall getBeliefsLiteralParserRuleCall_3_2_5_2_0_0() { return cBeliefsLiteralParserRuleCall_3_2_5_2_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_5_2_1() { return cAlternatives_3_2_5_2_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_5_2_1_0() { return cEOLParserRuleCall_3_2_5_2_1_0; }

		//","
		public Keyword getCommaKeyword_3_2_5_2_1_1() { return cCommaKeyword_3_2_5_2_1_1; }

		//"goals" ":" (goals+=Literal (EOL | ",")+)*
		public Group getGroup_3_2_6() { return cGroup_3_2_6; }

		//"goals"
		public Keyword getGoalsKeyword_3_2_6_0() { return cGoalsKeyword_3_2_6_0; }

		//":"
		public Keyword getColonKeyword_3_2_6_1() { return cColonKeyword_3_2_6_1; }

		//(goals+=Literal (EOL | ",")+)*
		public Group getGroup_3_2_6_2() { return cGroup_3_2_6_2; }

		//goals+=Literal
		public Assignment getGoalsAssignment_3_2_6_2_0() { return cGoalsAssignment_3_2_6_2_0; }

		//Literal
		public RuleCall getGoalsLiteralParserRuleCall_3_2_6_2_0_0() { return cGoalsLiteralParserRuleCall_3_2_6_2_0_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_6_2_1() { return cAlternatives_3_2_6_2_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_6_2_1_0() { return cEOLParserRuleCall_3_2_6_2_1_0; }

		//","
		public Keyword getCommaKeyword_3_2_6_2_1_1() { return cCommaKeyword_3_2_6_2_1_1; }

		//"focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_7() { return cGroup_3_2_7; }

		//"focus"
		public Keyword getFocusKeyword_3_2_7_0() { return cFocusKeyword_3_2_7_0; }

		//":"
		public Keyword getColonKeyword_3_2_7_1() { return cColonKeyword_3_2_7_1; }

		//(focus+=ATOM ("@" focusNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_7_2() { return cGroup_3_2_7_2; }

		//focus+=ATOM
		public Assignment getFocusAssignment_3_2_7_2_0() { return cFocusAssignment_3_2_7_2_0; }

		//ATOM
		public RuleCall getFocusATOMTerminalRuleCall_3_2_7_2_0_0() { return cFocusATOMTerminalRuleCall_3_2_7_2_0_0; }

		//("@" focusNode+=ATOM)?
		public Group getGroup_3_2_7_2_1() { return cGroup_3_2_7_2_1; }

		//"@"
		public Keyword getCommercialAtKeyword_3_2_7_2_1_0() { return cCommercialAtKeyword_3_2_7_2_1_0; }

		//focusNode+=ATOM
		public Assignment getFocusNodeAssignment_3_2_7_2_1_1() { return cFocusNodeAssignment_3_2_7_2_1_1; }

		//ATOM
		public RuleCall getFocusNodeATOMTerminalRuleCall_3_2_7_2_1_1_0() { return cFocusNodeATOMTerminalRuleCall_3_2_7_2_1_1_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_7_2_2() { return cAlternatives_3_2_7_2_2; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_7_2_2_0() { return cEOLParserRuleCall_3_2_7_2_2_0; }

		//","
		public Keyword getCommaKeyword_3_2_7_2_2_1() { return cCommaKeyword_3_2_7_2_2_1; }

		//"join" ":" (join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_8() { return cGroup_3_2_8; }

		//"join"
		public Keyword getJoinKeyword_3_2_8_0() { return cJoinKeyword_3_2_8_0; }

		//":"
		public Keyword getColonKeyword_3_2_8_1() { return cColonKeyword_3_2_8_1; }

		//(join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_8_2() { return cGroup_3_2_8_2; }

		//join+=ATOM
		public Assignment getJoinAssignment_3_2_8_2_0() { return cJoinAssignment_3_2_8_2_0; }

		//ATOM
		public RuleCall getJoinATOMTerminalRuleCall_3_2_8_2_0_0() { return cJoinATOMTerminalRuleCall_3_2_8_2_0_0; }

		//("@" joinNode+=ATOM)?
		public Group getGroup_3_2_8_2_1() { return cGroup_3_2_8_2_1; }

		//"@"
		public Keyword getCommercialAtKeyword_3_2_8_2_1_0() { return cCommercialAtKeyword_3_2_8_2_1_0; }

		//joinNode+=ATOM
		public Assignment getJoinNodeAssignment_3_2_8_2_1_1() { return cJoinNodeAssignment_3_2_8_2_1_1; }

		//ATOM
		public RuleCall getJoinNodeATOMTerminalRuleCall_3_2_8_2_1_1_0() { return cJoinNodeATOMTerminalRuleCall_3_2_8_2_1_1_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_8_2_2() { return cAlternatives_3_2_8_2_2; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_8_2_2_0() { return cEOLParserRuleCall_3_2_8_2_2_0; }

		//","
		public Keyword getCommaKeyword_3_2_8_2_2_1() { return cCommaKeyword_3_2_8_2_2_1; }

		//"roles" ":" (role+=ATOM "in" group+=ATOM ("@" groupNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_9() { return cGroup_3_2_9; }

		//"roles"
		public Keyword getRolesKeyword_3_2_9_0() { return cRolesKeyword_3_2_9_0; }

		//":"
		public Keyword getColonKeyword_3_2_9_1() { return cColonKeyword_3_2_9_1; }

		//(role+=ATOM "in" group+=ATOM ("@" groupNode+=ATOM)? (EOL | ",")+)*
		public Group getGroup_3_2_9_2() { return cGroup_3_2_9_2; }

		//role+=ATOM
		public Assignment getRoleAssignment_3_2_9_2_0() { return cRoleAssignment_3_2_9_2_0; }

		//ATOM
		public RuleCall getRoleATOMTerminalRuleCall_3_2_9_2_0_0() { return cRoleATOMTerminalRuleCall_3_2_9_2_0_0; }

		//"in"
		public Keyword getInKeyword_3_2_9_2_1() { return cInKeyword_3_2_9_2_1; }

		//group+=ATOM
		public Assignment getGroupAssignment_3_2_9_2_2() { return cGroupAssignment_3_2_9_2_2; }

		//ATOM
		public RuleCall getGroupATOMTerminalRuleCall_3_2_9_2_2_0() { return cGroupATOMTerminalRuleCall_3_2_9_2_2_0; }

		//("@" groupNode+=ATOM)?
		public Group getGroup_3_2_9_2_3() { return cGroup_3_2_9_2_3; }

		//"@"
		public Keyword getCommercialAtKeyword_3_2_9_2_3_0() { return cCommercialAtKeyword_3_2_9_2_3_0; }

		//groupNode+=ATOM
		public Assignment getGroupNodeAssignment_3_2_9_2_3_1() { return cGroupNodeAssignment_3_2_9_2_3_1; }

		//ATOM
		public RuleCall getGroupNodeATOMTerminalRuleCall_3_2_9_2_3_1_0() { return cGroupNodeATOMTerminalRuleCall_3_2_9_2_3_1_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_9_2_4() { return cAlternatives_3_2_9_2_4; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_9_2_4_0() { return cEOLParserRuleCall_3_2_9_2_4_0; }

		//","
		public Keyword getCommaKeyword_3_2_9_2_4_1() { return cCommaKeyword_3_2_9_2_4_1; }

		//"debug" ":" debug+=Literal (EOL | ",")+
		public Group getGroup_3_2_10() { return cGroup_3_2_10; }

		//"debug"
		public Keyword getDebugKeyword_3_2_10_0() { return cDebugKeyword_3_2_10_0; }

		//":"
		public Keyword getColonKeyword_3_2_10_1() { return cColonKeyword_3_2_10_1; }

		//debug+=Literal
		public Assignment getDebugAssignment_3_2_10_2() { return cDebugAssignment_3_2_10_2; }

		//Literal
		public RuleCall getDebugLiteralParserRuleCall_3_2_10_2_0() { return cDebugLiteralParserRuleCall_3_2_10_2_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_2_10_3() { return cAlternatives_3_2_10_3; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_2_10_3_0() { return cEOLParserRuleCall_3_2_10_3_0; }

		//","
		public Keyword getCommaKeyword_3_2_10_3_1() { return cCommaKeyword_3_2_10_3_1; }

		//"verbose" ":" verbose+=INT_LITERAL EOL+
		public Group getGroup_3_2_11() { return cGroup_3_2_11; }

		//"verbose"
		public Keyword getVerboseKeyword_3_2_11_0() { return cVerboseKeyword_3_2_11_0; }

		//":"
		public Keyword getColonKeyword_3_2_11_1() { return cColonKeyword_3_2_11_1; }

		//verbose+=INT_LITERAL
		public Assignment getVerboseAssignment_3_2_11_2() { return cVerboseAssignment_3_2_11_2; }

		//INT_LITERAL
		public RuleCall getVerboseINT_LITERALTerminalRuleCall_3_2_11_2_0() { return cVerboseINT_LITERALTerminalRuleCall_3_2_11_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_11_3() { return cEOLParserRuleCall_3_2_11_3; }

		//"nrcbp" ":" nrcbp+=INT_LITERAL EOL+
		public Group getGroup_3_2_12() { return cGroup_3_2_12; }

		//"nrcbp"
		public Keyword getNrcbpKeyword_3_2_12_0() { return cNrcbpKeyword_3_2_12_0; }

		//":"
		public Keyword getColonKeyword_3_2_12_1() { return cColonKeyword_3_2_12_1; }

		//nrcbp+=INT_LITERAL
		public Assignment getNrcbpAssignment_3_2_12_2() { return cNrcbpAssignment_3_2_12_2; }

		//INT_LITERAL
		public RuleCall getNrcbpINT_LITERALTerminalRuleCall_3_2_12_2_0() { return cNrcbpINT_LITERALTerminalRuleCall_3_2_12_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_12_3() { return cEOLParserRuleCall_3_2_12_3; }

		//"events" ":" ("discard" | "requeue" | "retrieve") EOL+
		public Group getGroup_3_2_13() { return cGroup_3_2_13; }

		//"events"
		public Keyword getEventsKeyword_3_2_13_0() { return cEventsKeyword_3_2_13_0; }

		//":"
		public Keyword getColonKeyword_3_2_13_1() { return cColonKeyword_3_2_13_1; }

		//"discard" | "requeue" | "retrieve"
		public Alternatives getAlternatives_3_2_13_2() { return cAlternatives_3_2_13_2; }

		//"discard"
		public Keyword getDiscardKeyword_3_2_13_2_0() { return cDiscardKeyword_3_2_13_2_0; }

		//"requeue"
		public Keyword getRequeueKeyword_3_2_13_2_1() { return cRequeueKeyword_3_2_13_2_1; }

		//"retrieve"
		public Keyword getRetrieveKeyword_3_2_13_2_2() { return cRetrieveKeyword_3_2_13_2_2; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_13_3() { return cEOLParserRuleCall_3_2_13_3; }

		//"intBels" ":" ("sameFocus" | "newFocus") EOL+
		public Group getGroup_3_2_14() { return cGroup_3_2_14; }

		//"intBels"
		public Keyword getIntBelsKeyword_3_2_14_0() { return cIntBelsKeyword_3_2_14_0; }

		//":"
		public Keyword getColonKeyword_3_2_14_1() { return cColonKeyword_3_2_14_1; }

		//"sameFocus" | "newFocus"
		public Alternatives getAlternatives_3_2_14_2() { return cAlternatives_3_2_14_2; }

		//"sameFocus"
		public Keyword getSameFocusKeyword_3_2_14_2_0() { return cSameFocusKeyword_3_2_14_2_0; }

		//"newFocus"
		public Keyword getNewFocusKeyword_3_2_14_2_1() { return cNewFocusKeyword_3_2_14_2_1; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_14_3() { return cEOLParserRuleCall_3_2_14_3; }

		//other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+
		public Group getGroup_3_2_15() { return cGroup_3_2_15; }

		//other+=ATOM
		public Assignment getOtherAssignment_3_2_15_0() { return cOtherAssignment_3_2_15_0; }

		//ATOM
		public RuleCall getOtherATOMTerminalRuleCall_3_2_15_0_0() { return cOtherATOMTerminalRuleCall_3_2_15_0_0; }

		//":"
		public Keyword getColonKeyword_3_2_15_1() { return cColonKeyword_3_2_15_1; }

		//string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL
		public Alternatives getAlternatives_3_2_15_2() { return cAlternatives_3_2_15_2; }

		//string+=STRING
		public Assignment getStringAssignment_3_2_15_2_0() { return cStringAssignment_3_2_15_2_0; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_3_2_15_2_0_0() { return cStringSTRINGTerminalRuleCall_3_2_15_2_0_0; }

		//val+=INT_LITERAL
		public Assignment getValAssignment_3_2_15_2_1() { return cValAssignment_3_2_15_2_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_3_2_15_2_1_0() { return cValINT_LITERALTerminalRuleCall_3_2_15_2_1_0; }

		//literal+=Literal
		public Assignment getLiteralAssignment_3_2_15_2_2() { return cLiteralAssignment_3_2_15_2_2; }

		//Literal
		public RuleCall getLiteralLiteralParserRuleCall_3_2_15_2_2_0() { return cLiteralLiteralParserRuleCall_3_2_15_2_2_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_3_2_15_2_3() { return cVal_realAssignment_3_2_15_2_3; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_3_2_15_2_3_0() { return cVal_realREAL_LITERALTerminalRuleCall_3_2_15_2_3_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3_2_15_3() { return cEOLParserRuleCall_3_2_15_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4() { return cEOLParserRuleCall_4; }
	}

	public class WorkspaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Workspace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkspaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cEOLParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cArtifactAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cArtifactArtifactParserRuleCall_4_0_0 = (RuleCall)cArtifactAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final Keyword cAgentsKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cColonKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Group cGroup_4_1_2 = (Group)cGroup_4_1.eContents().get(2);
		private final Alternatives cAlternatives_4_1_2_0 = (Alternatives)cGroup_4_1_2.eContents().get(0);
		private final Assignment cAgentAssignment_4_1_2_0_0 = (Assignment)cAlternatives_4_1_2_0.eContents().get(0);
		private final RuleCall cAgentATOMTerminalRuleCall_4_1_2_0_0_0 = (RuleCall)cAgentAssignment_4_1_2_0_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_4_1_2_0_1 = (Keyword)cAlternatives_4_1_2_0.eContents().get(1);
		private final Alternatives cAlternatives_4_1_2_1 = (Alternatives)cGroup_4_1_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_4_1_2_1_0 = (RuleCall)cAlternatives_4_1_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_4_1_2_1_1 = (Keyword)cAlternatives_4_1_2_1.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cAlternatives_4.eContents().get(2);
		private final Keyword cDebugKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Group cGroup_4_2_1 = (Group)cGroup_4_2.eContents().get(1);
		private final Keyword cColonKeyword_4_2_1_0 = (Keyword)cGroup_4_2_1.eContents().get(0);
		private final Assignment cDebugAssignment_4_2_1_1 = (Assignment)cGroup_4_2_1.eContents().get(1);
		private final RuleCall cDebugLiteralParserRuleCall_4_2_1_1_0 = (RuleCall)cDebugAssignment_4_2_1_1.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_2 = (RuleCall)cGroup_4_2.eContents().get(2);
		private final Assignment cNodeAssignment_4_3 = (Assignment)cAlternatives_4.eContents().get(3);
		private final RuleCall cNodeONodeParserRuleCall_4_3_0 = (RuleCall)cNodeAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final RuleCall cEOLParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		
		//Workspace:
		//	"workspace" name=ATOM "{" EOL* (artifact+=Artifact | "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)* | "debug" (":"
		//	debug+=Literal)? EOL+ | node+=ONode)* "}" EOL*;
		public ParserRule getRule() { return rule; }

		//"workspace" name=ATOM "{" EOL* (artifact+=Artifact | "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)* | "debug" (":"
		//debug+=Literal)? EOL+ | node+=ONode)* "}" EOL*
		public Group getGroup() { return cGroup; }

		//"workspace"
		public Keyword getWorkspaceKeyword_0() { return cWorkspaceKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//EOL*
		public RuleCall getEOLParserRuleCall_3() { return cEOLParserRuleCall_3; }

		//(artifact+=Artifact | "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)* | "debug" (":" debug+=Literal)? EOL+ |
		//node+=ONode)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//artifact+=Artifact
		public Assignment getArtifactAssignment_4_0() { return cArtifactAssignment_4_0; }

		//Artifact
		public RuleCall getArtifactArtifactParserRuleCall_4_0_0() { return cArtifactArtifactParserRuleCall_4_0_0; }

		//"agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"agents"
		public Keyword getAgentsKeyword_4_1_0() { return cAgentsKeyword_4_1_0; }

		//":"
		public Keyword getColonKeyword_4_1_1() { return cColonKeyword_4_1_1; }

		//((agent+=ATOM | "*") (EOL | ",")+)*
		public Group getGroup_4_1_2() { return cGroup_4_1_2; }

		//agent+=ATOM | "*"
		public Alternatives getAlternatives_4_1_2_0() { return cAlternatives_4_1_2_0; }

		//agent+=ATOM
		public Assignment getAgentAssignment_4_1_2_0_0() { return cAgentAssignment_4_1_2_0_0; }

		//ATOM
		public RuleCall getAgentATOMTerminalRuleCall_4_1_2_0_0_0() { return cAgentATOMTerminalRuleCall_4_1_2_0_0_0; }

		//"*"
		public Keyword getAsteriskKeyword_4_1_2_0_1() { return cAsteriskKeyword_4_1_2_0_1; }

		//(EOL | ",")+
		public Alternatives getAlternatives_4_1_2_1() { return cAlternatives_4_1_2_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_4_1_2_1_0() { return cEOLParserRuleCall_4_1_2_1_0; }

		//","
		public Keyword getCommaKeyword_4_1_2_1_1() { return cCommaKeyword_4_1_2_1_1; }

		//"debug" (":" debug+=Literal)? EOL+
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"debug"
		public Keyword getDebugKeyword_4_2_0() { return cDebugKeyword_4_2_0; }

		//(":" debug+=Literal)?
		public Group getGroup_4_2_1() { return cGroup_4_2_1; }

		//":"
		public Keyword getColonKeyword_4_2_1_0() { return cColonKeyword_4_2_1_0; }

		//debug+=Literal
		public Assignment getDebugAssignment_4_2_1_1() { return cDebugAssignment_4_2_1_1; }

		//Literal
		public RuleCall getDebugLiteralParserRuleCall_4_2_1_1_0() { return cDebugLiteralParserRuleCall_4_2_1_1_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_2() { return cEOLParserRuleCall_4_2_2; }

		//node+=ONode
		public Assignment getNodeAssignment_4_3() { return cNodeAssignment_4_3; }

		//ONode
		public RuleCall getNodeONodeParserRuleCall_4_3_0() { return cNodeONodeParserRuleCall_4_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//EOL*
		public RuleCall getEOLParserRuleCall_6() { return cEOLParserRuleCall_6; }
	}

	public class ArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Artifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArtifactKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cClassDefAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cClassDefClassDefParserRuleCall_3_0 = (RuleCall)cClassDefAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cFocusedByKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cColonKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Group cGroup_4_2_2 = (Group)cGroup_4_2.eContents().get(2);
		private final Alternatives cAlternatives_4_2_2_0 = (Alternatives)cGroup_4_2_2.eContents().get(0);
		private final Assignment cAgentAssignment_4_2_2_0_0 = (Assignment)cAlternatives_4_2_2_0.eContents().get(0);
		private final RuleCall cAgentATOMTerminalRuleCall_4_2_2_0_0_0 = (RuleCall)cAgentAssignment_4_2_2_0_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_4_2_2_0_1 = (Keyword)cAlternatives_4_2_2_0.eContents().get(1);
		private final Alternatives cAlternatives_4_2_2_1 = (Alternatives)cGroup_4_2_2.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_4_2_2_1_0 = (RuleCall)cAlternatives_4_2_2_1.eContents().get(0);
		private final Keyword cCommaKeyword_4_2_2_1_1 = (Keyword)cAlternatives_4_2_2_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Artifact:
		//	"artifact" name=ATOM ":" classDef=ClassDef ("{" EOL* ("focused-by" ":" ((agent+=ATOM | "*") (EOL | ",")+)*)? "}")?
		//	EOL*;
		public ParserRule getRule() { return rule; }

		//"artifact" name=ATOM ":" classDef=ClassDef ("{" EOL* ("focused-by" ":" ((agent+=ATOM | "*") (EOL | ",")+)*)? "}")? EOL*
		public Group getGroup() { return cGroup; }

		//"artifact"
		public Keyword getArtifactKeyword_0() { return cArtifactKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//classDef=ClassDef
		public Assignment getClassDefAssignment_3() { return cClassDefAssignment_3; }

		//ClassDef
		public RuleCall getClassDefClassDefParserRuleCall_3_0() { return cClassDefClassDefParserRuleCall_3_0; }

		//("{" EOL* ("focused-by" ":" ((agent+=ATOM | "*") (EOL | ",")+)*)? "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4_1() { return cEOLParserRuleCall_4_1; }

		//("focused-by" ":" ((agent+=ATOM | "*") (EOL | ",")+)*)?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"focused-by"
		public Keyword getFocusedByKeyword_4_2_0() { return cFocusedByKeyword_4_2_0; }

		//":"
		public Keyword getColonKeyword_4_2_1() { return cColonKeyword_4_2_1; }

		//((agent+=ATOM | "*") (EOL | ",")+)*
		public Group getGroup_4_2_2() { return cGroup_4_2_2; }

		//agent+=ATOM | "*"
		public Alternatives getAlternatives_4_2_2_0() { return cAlternatives_4_2_2_0; }

		//agent+=ATOM
		public Assignment getAgentAssignment_4_2_2_0_0() { return cAgentAssignment_4_2_2_0_0; }

		//ATOM
		public RuleCall getAgentATOMTerminalRuleCall_4_2_2_0_0_0() { return cAgentATOMTerminalRuleCall_4_2_2_0_0_0; }

		//"*"
		public Keyword getAsteriskKeyword_4_2_2_0_1() { return cAsteriskKeyword_4_2_2_0_1; }

		//(EOL | ",")+
		public Alternatives getAlternatives_4_2_2_1() { return cAlternatives_4_2_2_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_4_2_2_1_0() { return cEOLParserRuleCall_4_2_2_1_0; }

		//","
		public Keyword getCommaKeyword_4_2_2_1_1() { return cCommaKeyword_4_2_2_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//EOL*
		public RuleCall getEOLParserRuleCall_5() { return cEOLParserRuleCall_5; }
	}

	public class OrganisationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Organisation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrganisationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cFileNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cFileNameOFileNameParserRuleCall_2_0 = (RuleCall)cFileNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cGroupAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cGroupGroupParserRuleCall_5_0_0 = (RuleCall)cGroupAssignment_5_0.eContents().get(0);
		private final Assignment cSchemeAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cSchemeSchemeParserRuleCall_5_1_0 = (RuleCall)cSchemeAssignment_5_1.eContents().get(0);
		private final Assignment cAgentsAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cAgentsOAgentsParserRuleCall_5_2_0 = (RuleCall)cAgentsAssignment_5_2.eContents().get(0);
		private final Assignment cNodeAssignment_5_3 = (Assignment)cAlternatives_5.eContents().get(3);
		private final RuleCall cNodeONodeParserRuleCall_5_3_0 = (RuleCall)cNodeAssignment_5_3.eContents().get(0);
		private final Assignment cOtherAssignment_5_4 = (Assignment)cAlternatives_5.eContents().get(4);
		private final RuleCall cOtherOOthersParserRuleCall_5_4_0 = (RuleCall)cOtherAssignment_5_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cEOLParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//Organisation:
		//	"organisation" name=ATOM fileName=OFileName? "{" EOL* (group+=Group | scheme+=Scheme | agents+=OAgents | node+=ONode |
		//	other+=OOthers)* "}" EOL*;
		public ParserRule getRule() { return rule; }

		//"organisation" name=ATOM fileName=OFileName? "{" EOL* (group+=Group | scheme+=Scheme | agents+=OAgents | node+=ONode |
		//other+=OOthers)* "}" EOL*
		public Group getGroup() { return cGroup; }

		//"organisation"
		public Keyword getOrganisationKeyword_0() { return cOrganisationKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//fileName=OFileName?
		public Assignment getFileNameAssignment_2() { return cFileNameAssignment_2; }

		//OFileName
		public RuleCall getFileNameOFileNameParserRuleCall_2_0() { return cFileNameOFileNameParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4() { return cEOLParserRuleCall_4; }

		//(group+=Group | scheme+=Scheme | agents+=OAgents | node+=ONode | other+=OOthers)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//group+=Group
		public Assignment getGroupAssignment_5_0() { return cGroupAssignment_5_0; }

		//Group
		public RuleCall getGroupGroupParserRuleCall_5_0_0() { return cGroupGroupParserRuleCall_5_0_0; }

		//scheme+=Scheme
		public Assignment getSchemeAssignment_5_1() { return cSchemeAssignment_5_1; }

		//Scheme
		public RuleCall getSchemeSchemeParserRuleCall_5_1_0() { return cSchemeSchemeParserRuleCall_5_1_0; }

		//agents+=OAgents
		public Assignment getAgentsAssignment_5_2() { return cAgentsAssignment_5_2; }

		//OAgents
		public RuleCall getAgentsOAgentsParserRuleCall_5_2_0() { return cAgentsOAgentsParserRuleCall_5_2_0; }

		//node+=ONode
		public Assignment getNodeAssignment_5_3() { return cNodeAssignment_5_3; }

		//ONode
		public RuleCall getNodeONodeParserRuleCall_5_3_0() { return cNodeONodeParserRuleCall_5_3_0; }

		//other+=OOthers
		public Assignment getOtherAssignment_5_4() { return cOtherAssignment_5_4; }

		//OOthers
		public RuleCall getOtherOOthersParserRuleCall_5_4_0() { return cOtherOOthersParserRuleCall_5_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//EOL*
		public RuleCall getEOLParserRuleCall_7() { return cEOLParserRuleCall_7; }
	}

	public class OFileNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OFileName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFileNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//OFileName:
		//	":" name=FileName;
		public ParserRule getRule() { return rule; }

		//":" name=FileName
		public Group getGroup() { return cGroup; }

		//":"
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }

		//name=FileName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FileName
		public RuleCall getNameFileNameParserRuleCall_1_0() { return cNameFileNameParserRuleCall_1_0; }
	}

	public class ONodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ONode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNodeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameATOMTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//ONode:
		//	"node" ":" name=ATOM EOL+;
		public ParserRule getRule() { return rule; }

		//"node" ":" name=ATOM EOL+
		public Group getGroup() { return cGroup; }

		//"node"
		public Keyword getNodeKeyword_0() { return cNodeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//name=ATOM
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_2_0() { return cNameATOMTerminalRuleCall_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3() { return cEOLParserRuleCall_3; }
	}

	public class OAgentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OAgents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOAgentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAgentsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_3_0 = (Alternatives)cGroup_3.eContents().get(0);
		private final Assignment cAgentAssignment_3_0_0 = (Assignment)cAlternatives_3_0.eContents().get(0);
		private final RuleCall cAgentATOMTerminalRuleCall_3_0_0_0 = (RuleCall)cAgentAssignment_3_0_0.eContents().get(0);
		private final Keyword cAsteriskKeyword_3_0_1 = (Keyword)cAlternatives_3_0.eContents().get(1);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final RuleCall cEOLParserRuleCall_3_1_0 = (RuleCall)cAlternatives_3_1.eContents().get(0);
		private final Keyword cCommaKeyword_3_1_1 = (Keyword)cAlternatives_3_1.eContents().get(1);
		
		//OAgents:
		//	{OAgents} "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)*;
		public ParserRule getRule() { return rule; }

		//{OAgents} "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)*
		public Group getGroup() { return cGroup; }

		//{OAgents}
		public Action getOAgentsAction_0() { return cOAgentsAction_0; }

		//"agents"
		public Keyword getAgentsKeyword_1() { return cAgentsKeyword_1; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//((agent+=ATOM | "*") (EOL | ",")+)*
		public Group getGroup_3() { return cGroup_3; }

		//agent+=ATOM | "*"
		public Alternatives getAlternatives_3_0() { return cAlternatives_3_0; }

		//agent+=ATOM
		public Assignment getAgentAssignment_3_0_0() { return cAgentAssignment_3_0_0; }

		//ATOM
		public RuleCall getAgentATOMTerminalRuleCall_3_0_0_0() { return cAgentATOMTerminalRuleCall_3_0_0_0; }

		//"*"
		public Keyword getAsteriskKeyword_3_0_1() { return cAsteriskKeyword_3_0_1; }

		//(EOL | ",")+
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//EOL
		public RuleCall getEOLParserRuleCall_3_1_0() { return cEOLParserRuleCall_3_1_0; }

		//","
		public Keyword getCommaKeyword_3_1_1() { return cCommaKeyword_3_1_1; }
	}

	public class OOthersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OOthers");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameATOMTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cStringAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_2_0_0 = (RuleCall)cStringAssignment_2_0.eContents().get(0);
		private final Assignment cValAssignment_2_1 = (Assignment)cAlternatives_2.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_2_1_0 = (RuleCall)cValAssignment_2_1.eContents().get(0);
		private final Assignment cLiteralAssignment_2_2 = (Assignment)cAlternatives_2.eContents().get(2);
		private final RuleCall cLiteralLiteralParserRuleCall_2_2_0 = (RuleCall)cLiteralAssignment_2_2.eContents().get(0);
		private final Assignment cVal_realAssignment_2_3 = (Assignment)cAlternatives_2.eContents().get(3);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_2_3_0 = (RuleCall)cVal_realAssignment_2_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//OOthers:
		//	name=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+;
		public ParserRule getRule() { return rule; }

		//name=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+
		public Group getGroup() { return cGroup; }

		//name=ATOM
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_0_0() { return cNameATOMTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//string+=STRING
		public Assignment getStringAssignment_2_0() { return cStringAssignment_2_0; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_2_0_0() { return cStringSTRINGTerminalRuleCall_2_0_0; }

		//val+=INT_LITERAL
		public Assignment getValAssignment_2_1() { return cValAssignment_2_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_2_1_0() { return cValINT_LITERALTerminalRuleCall_2_1_0; }

		//literal+=Literal
		public Assignment getLiteralAssignment_2_2() { return cLiteralAssignment_2_2; }

		//Literal
		public RuleCall getLiteralLiteralParserRuleCall_2_2_0() { return cLiteralLiteralParserRuleCall_2_2_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_2_3() { return cVal_realAssignment_2_3; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_2_3_0() { return cVal_realREAL_LITERALTerminalRuleCall_2_3_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_3() { return cEOLParserRuleCall_3; }
	}

	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKindAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKindATOMTerminalRuleCall_3_0 = (RuleCall)cKindAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Alternatives cAlternatives_4_2 = (Alternatives)cGroup_4.eContents().get(2);
		private final Assignment cGroupAssignment_4_2_0 = (Assignment)cAlternatives_4_2.eContents().get(0);
		private final RuleCall cGroupGroupParserRuleCall_4_2_0_0 = (RuleCall)cGroupAssignment_4_2_0.eContents().get(0);
		private final Group cGroup_4_2_1 = (Group)cAlternatives_4_2.eContents().get(1);
		private final Keyword cResponsibleForKeyword_4_2_1_0 = (Keyword)cGroup_4_2_1.eContents().get(0);
		private final Keyword cColonKeyword_4_2_1_1 = (Keyword)cGroup_4_2_1.eContents().get(1);
		private final Assignment cResponsibleForAssignment_4_2_1_2 = (Assignment)cGroup_4_2_1.eContents().get(2);
		private final RuleCall cResponsibleForATOMTerminalRuleCall_4_2_1_2_0 = (RuleCall)cResponsibleForAssignment_4_2_1_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_1_3 = (RuleCall)cGroup_4_2_1.eContents().get(3);
		private final Group cGroup_4_2_2 = (Group)cAlternatives_4_2.eContents().get(2);
		private final Keyword cOwnerKeyword_4_2_2_0 = (Keyword)cGroup_4_2_2.eContents().get(0);
		private final Keyword cColonKeyword_4_2_2_1 = (Keyword)cGroup_4_2_2.eContents().get(1);
		private final Assignment cOwnerAssignment_4_2_2_2 = (Assignment)cGroup_4_2_2.eContents().get(2);
		private final RuleCall cOwnerATOMTerminalRuleCall_4_2_2_2_0 = (RuleCall)cOwnerAssignment_4_2_2_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_2_3 = (RuleCall)cGroup_4_2_2.eContents().get(3);
		private final Group cGroup_4_2_3 = (Group)cAlternatives_4_2.eContents().get(3);
		private final Keyword cDebugKeyword_4_2_3_0 = (Keyword)cGroup_4_2_3.eContents().get(0);
		private final Group cGroup_4_2_3_1 = (Group)cGroup_4_2_3.eContents().get(1);
		private final Keyword cColonKeyword_4_2_3_1_0 = (Keyword)cGroup_4_2_3_1.eContents().get(0);
		private final Assignment cDebugAssignment_4_2_3_1_1 = (Assignment)cGroup_4_2_3_1.eContents().get(1);
		private final RuleCall cDebugLiteralParserRuleCall_4_2_3_1_1_0 = (RuleCall)cDebugAssignment_4_2_3_1_1.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_3_2 = (RuleCall)cGroup_4_2_3.eContents().get(2);
		private final Group cGroup_4_2_4 = (Group)cAlternatives_4_2.eContents().get(4);
		private final Assignment cOtherAssignment_4_2_4_0 = (Assignment)cGroup_4_2_4.eContents().get(0);
		private final RuleCall cOtherATOMTerminalRuleCall_4_2_4_0_0 = (RuleCall)cOtherAssignment_4_2_4_0.eContents().get(0);
		private final Keyword cColonKeyword_4_2_4_1 = (Keyword)cGroup_4_2_4.eContents().get(1);
		private final Alternatives cAlternatives_4_2_4_2 = (Alternatives)cGroup_4_2_4.eContents().get(2);
		private final Assignment cStringAssignment_4_2_4_2_0 = (Assignment)cAlternatives_4_2_4_2.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_4_2_4_2_0_0 = (RuleCall)cStringAssignment_4_2_4_2_0.eContents().get(0);
		private final Assignment cValAssignment_4_2_4_2_1 = (Assignment)cAlternatives_4_2_4_2.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_4_2_4_2_1_0 = (RuleCall)cValAssignment_4_2_4_2_1.eContents().get(0);
		private final Assignment cLiteralAssignment_4_2_4_2_2 = (Assignment)cAlternatives_4_2_4_2.eContents().get(2);
		private final RuleCall cLiteralLiteralParserRuleCall_4_2_4_2_2_0 = (RuleCall)cLiteralAssignment_4_2_4_2_2.eContents().get(0);
		private final Assignment cVal_realAssignment_4_2_4_2_3 = (Assignment)cAlternatives_4_2_4_2.eContents().get(3);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_4_2_4_2_3_0 = (RuleCall)cVal_realAssignment_4_2_4_2_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_4_3 = (RuleCall)cGroup_4_2_4.eContents().get(3);
		private final Group cGroup_4_2_5 = (Group)cAlternatives_4_2.eContents().get(5);
		private final Keyword cPlayersKeyword_4_2_5_0 = (Keyword)cGroup_4_2_5.eContents().get(0);
		private final Keyword cColonKeyword_4_2_5_1 = (Keyword)cGroup_4_2_5.eContents().get(1);
		private final Group cGroup_4_2_5_2 = (Group)cGroup_4_2_5.eContents().get(2);
		private final Assignment cAgentAssignment_4_2_5_2_0 = (Assignment)cGroup_4_2_5_2.eContents().get(0);
		private final RuleCall cAgentATOMTerminalRuleCall_4_2_5_2_0_0 = (RuleCall)cAgentAssignment_4_2_5_2_0.eContents().get(0);
		private final Assignment cRoleAssignment_4_2_5_2_1 = (Assignment)cGroup_4_2_5_2.eContents().get(1);
		private final RuleCall cRoleATOMTerminalRuleCall_4_2_5_2_1_0 = (RuleCall)cRoleAssignment_4_2_5_2_1.eContents().get(0);
		private final Alternatives cAlternatives_4_2_5_2_2 = (Alternatives)cGroup_4_2_5_2.eContents().get(2);
		private final RuleCall cEOLParserRuleCall_4_2_5_2_2_0 = (RuleCall)cAlternatives_4_2_5_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_2_5_2_2_1 = (Keyword)cAlternatives_4_2_5_2_2.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Group:
		//	"group" name=ATOM ":" kind=ATOM ("{" EOL* (group+=Group | "responsible-for" ":" responsibleFor+=ATOM EOL+ | "owner"
		//	":" owner+=ATOM EOL+ | "debug" (":" debug+=Literal)? EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL |
		//	literal+=Literal | val_real+=REAL_LITERAL) EOL+ | "players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*)* "}")? EOL*;
		public ParserRule getRule() { return rule; }

		//"group" name=ATOM ":" kind=ATOM ("{" EOL* (group+=Group | "responsible-for" ":" responsibleFor+=ATOM EOL+ | "owner" ":"
		//owner+=ATOM EOL+ | "debug" (":" debug+=Literal)? EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL |
		//literal+=Literal | val_real+=REAL_LITERAL) EOL+ | "players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*)* "}")? EOL*
		public Group getGroup() { return cGroup; }

		//"group"
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//kind=ATOM
		public Assignment getKindAssignment_3() { return cKindAssignment_3; }

		//ATOM
		public RuleCall getKindATOMTerminalRuleCall_3_0() { return cKindATOMTerminalRuleCall_3_0; }

		//("{" EOL* (group+=Group | "responsible-for" ":" responsibleFor+=ATOM EOL+ | "owner" ":" owner+=ATOM EOL+ | "debug" (":"
		//debug+=Literal)? EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL)
		//EOL+ | "players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4_1() { return cEOLParserRuleCall_4_1; }

		//(group+=Group | "responsible-for" ":" responsibleFor+=ATOM EOL+ | "owner" ":" owner+=ATOM EOL+ | "debug" (":"
		//debug+=Literal)? EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL)
		//EOL+ | "players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*)*
		public Alternatives getAlternatives_4_2() { return cAlternatives_4_2; }

		//group+=Group
		public Assignment getGroupAssignment_4_2_0() { return cGroupAssignment_4_2_0; }

		//Group
		public RuleCall getGroupGroupParserRuleCall_4_2_0_0() { return cGroupGroupParserRuleCall_4_2_0_0; }

		//"responsible-for" ":" responsibleFor+=ATOM EOL+
		public Group getGroup_4_2_1() { return cGroup_4_2_1; }

		//"responsible-for"
		public Keyword getResponsibleForKeyword_4_2_1_0() { return cResponsibleForKeyword_4_2_1_0; }

		//":"
		public Keyword getColonKeyword_4_2_1_1() { return cColonKeyword_4_2_1_1; }

		//responsibleFor+=ATOM
		public Assignment getResponsibleForAssignment_4_2_1_2() { return cResponsibleForAssignment_4_2_1_2; }

		//ATOM
		public RuleCall getResponsibleForATOMTerminalRuleCall_4_2_1_2_0() { return cResponsibleForATOMTerminalRuleCall_4_2_1_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_1_3() { return cEOLParserRuleCall_4_2_1_3; }

		//"owner" ":" owner+=ATOM EOL+
		public Group getGroup_4_2_2() { return cGroup_4_2_2; }

		//"owner"
		public Keyword getOwnerKeyword_4_2_2_0() { return cOwnerKeyword_4_2_2_0; }

		//":"
		public Keyword getColonKeyword_4_2_2_1() { return cColonKeyword_4_2_2_1; }

		//owner+=ATOM
		public Assignment getOwnerAssignment_4_2_2_2() { return cOwnerAssignment_4_2_2_2; }

		//ATOM
		public RuleCall getOwnerATOMTerminalRuleCall_4_2_2_2_0() { return cOwnerATOMTerminalRuleCall_4_2_2_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_2_3() { return cEOLParserRuleCall_4_2_2_3; }

		//"debug" (":" debug+=Literal)? EOL+
		public Group getGroup_4_2_3() { return cGroup_4_2_3; }

		//"debug"
		public Keyword getDebugKeyword_4_2_3_0() { return cDebugKeyword_4_2_3_0; }

		//(":" debug+=Literal)?
		public Group getGroup_4_2_3_1() { return cGroup_4_2_3_1; }

		//":"
		public Keyword getColonKeyword_4_2_3_1_0() { return cColonKeyword_4_2_3_1_0; }

		//debug+=Literal
		public Assignment getDebugAssignment_4_2_3_1_1() { return cDebugAssignment_4_2_3_1_1; }

		//Literal
		public RuleCall getDebugLiteralParserRuleCall_4_2_3_1_1_0() { return cDebugLiteralParserRuleCall_4_2_3_1_1_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_3_2() { return cEOLParserRuleCall_4_2_3_2; }

		//other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+
		public Group getGroup_4_2_4() { return cGroup_4_2_4; }

		//other+=ATOM
		public Assignment getOtherAssignment_4_2_4_0() { return cOtherAssignment_4_2_4_0; }

		//ATOM
		public RuleCall getOtherATOMTerminalRuleCall_4_2_4_0_0() { return cOtherATOMTerminalRuleCall_4_2_4_0_0; }

		//":"
		public Keyword getColonKeyword_4_2_4_1() { return cColonKeyword_4_2_4_1; }

		//string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL
		public Alternatives getAlternatives_4_2_4_2() { return cAlternatives_4_2_4_2; }

		//string+=STRING
		public Assignment getStringAssignment_4_2_4_2_0() { return cStringAssignment_4_2_4_2_0; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_4_2_4_2_0_0() { return cStringSTRINGTerminalRuleCall_4_2_4_2_0_0; }

		//val+=INT_LITERAL
		public Assignment getValAssignment_4_2_4_2_1() { return cValAssignment_4_2_4_2_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_4_2_4_2_1_0() { return cValINT_LITERALTerminalRuleCall_4_2_4_2_1_0; }

		//literal+=Literal
		public Assignment getLiteralAssignment_4_2_4_2_2() { return cLiteralAssignment_4_2_4_2_2; }

		//Literal
		public RuleCall getLiteralLiteralParserRuleCall_4_2_4_2_2_0() { return cLiteralLiteralParserRuleCall_4_2_4_2_2_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_4_2_4_2_3() { return cVal_realAssignment_4_2_4_2_3; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_4_2_4_2_3_0() { return cVal_realREAL_LITERALTerminalRuleCall_4_2_4_2_3_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_4_3() { return cEOLParserRuleCall_4_2_4_3; }

		//"players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*
		public Group getGroup_4_2_5() { return cGroup_4_2_5; }

		//"players"
		public Keyword getPlayersKeyword_4_2_5_0() { return cPlayersKeyword_4_2_5_0; }

		//":"
		public Keyword getColonKeyword_4_2_5_1() { return cColonKeyword_4_2_5_1; }

		//(agent+=ATOM role+=ATOM (EOL | ",")+)*
		public Group getGroup_4_2_5_2() { return cGroup_4_2_5_2; }

		//agent+=ATOM
		public Assignment getAgentAssignment_4_2_5_2_0() { return cAgentAssignment_4_2_5_2_0; }

		//ATOM
		public RuleCall getAgentATOMTerminalRuleCall_4_2_5_2_0_0() { return cAgentATOMTerminalRuleCall_4_2_5_2_0_0; }

		//role+=ATOM
		public Assignment getRoleAssignment_4_2_5_2_1() { return cRoleAssignment_4_2_5_2_1; }

		//ATOM
		public RuleCall getRoleATOMTerminalRuleCall_4_2_5_2_1_0() { return cRoleATOMTerminalRuleCall_4_2_5_2_1_0; }

		//(EOL | ",")+
		public Alternatives getAlternatives_4_2_5_2_2() { return cAlternatives_4_2_5_2_2; }

		//EOL
		public RuleCall getEOLParserRuleCall_4_2_5_2_2_0() { return cEOLParserRuleCall_4_2_5_2_2_0; }

		//","
		public Keyword getCommaKeyword_4_2_5_2_2_1() { return cCommaKeyword_4_2_5_2_2_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//EOL*
		public RuleCall getEOLParserRuleCall_5() { return cEOLParserRuleCall_5; }
	}

	public class SchemeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Scheme");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSchemeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameATOMTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cKindAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cKindATOMTerminalRuleCall_3_0 = (RuleCall)cKindAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
		private final Alternatives cAlternatives_4_2 = (Alternatives)cGroup_4.eContents().get(2);
		private final Group cGroup_4_2_0 = (Group)cAlternatives_4_2.eContents().get(0);
		private final Keyword cDebugKeyword_4_2_0_0 = (Keyword)cGroup_4_2_0.eContents().get(0);
		private final Group cGroup_4_2_0_1 = (Group)cGroup_4_2_0.eContents().get(1);
		private final Keyword cColonKeyword_4_2_0_1_0 = (Keyword)cGroup_4_2_0_1.eContents().get(0);
		private final Assignment cDebugAssignment_4_2_0_1_1 = (Assignment)cGroup_4_2_0_1.eContents().get(1);
		private final RuleCall cDebugLiteralParserRuleCall_4_2_0_1_1_0 = (RuleCall)cDebugAssignment_4_2_0_1_1.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_0_2 = (RuleCall)cGroup_4_2_0.eContents().get(2);
		private final Group cGroup_4_2_1 = (Group)cAlternatives_4_2.eContents().get(1);
		private final Keyword cOwnerKeyword_4_2_1_0 = (Keyword)cGroup_4_2_1.eContents().get(0);
		private final Keyword cColonKeyword_4_2_1_1 = (Keyword)cGroup_4_2_1.eContents().get(1);
		private final Assignment cOwnerAssignment_4_2_1_2 = (Assignment)cGroup_4_2_1.eContents().get(2);
		private final RuleCall cOwnerATOMTerminalRuleCall_4_2_1_2_0 = (RuleCall)cOwnerAssignment_4_2_1_2.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_1_3 = (RuleCall)cGroup_4_2_1.eContents().get(3);
		private final Group cGroup_4_2_2 = (Group)cAlternatives_4_2.eContents().get(2);
		private final Assignment cOtherAssignment_4_2_2_0 = (Assignment)cGroup_4_2_2.eContents().get(0);
		private final RuleCall cOtherATOMTerminalRuleCall_4_2_2_0_0 = (RuleCall)cOtherAssignment_4_2_2_0.eContents().get(0);
		private final Keyword cColonKeyword_4_2_2_1 = (Keyword)cGroup_4_2_2.eContents().get(1);
		private final Alternatives cAlternatives_4_2_2_2 = (Alternatives)cGroup_4_2_2.eContents().get(2);
		private final Assignment cStringAssignment_4_2_2_2_0 = (Assignment)cAlternatives_4_2_2_2.eContents().get(0);
		private final RuleCall cStringSTRINGTerminalRuleCall_4_2_2_2_0_0 = (RuleCall)cStringAssignment_4_2_2_2_0.eContents().get(0);
		private final Assignment cValAssignment_4_2_2_2_1 = (Assignment)cAlternatives_4_2_2_2.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_4_2_2_2_1_0 = (RuleCall)cValAssignment_4_2_2_2_1.eContents().get(0);
		private final Assignment cLiteralAssignment_4_2_2_2_2 = (Assignment)cAlternatives_4_2_2_2.eContents().get(2);
		private final RuleCall cLiteralLiteralParserRuleCall_4_2_2_2_2_0 = (RuleCall)cLiteralAssignment_4_2_2_2_2.eContents().get(0);
		private final Assignment cVal_realAssignment_4_2_2_2_3 = (Assignment)cAlternatives_4_2_2_2.eContents().get(3);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_4_2_2_2_3_0 = (RuleCall)cVal_realAssignment_4_2_2_2_3.eContents().get(0);
		private final RuleCall cEOLParserRuleCall_4_2_2_3 = (RuleCall)cGroup_4_2_2.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final RuleCall cEOLParserRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Scheme:
		//	"scheme" name=ATOM ":" kind=ATOM ("{" EOL* ("debug" (":" debug+=Literal)? EOL+ | "owner" ":" owner+=ATOM EOL+ |
		//	other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+)* "}")? EOL*;
		public ParserRule getRule() { return rule; }

		//"scheme" name=ATOM ":" kind=ATOM ("{" EOL* ("debug" (":" debug+=Literal)? EOL+ | "owner" ":" owner+=ATOM EOL+ |
		//other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+)* "}")? EOL*
		public Group getGroup() { return cGroup; }

		//"scheme"
		public Keyword getSchemeKeyword_0() { return cSchemeKeyword_0; }

		//name=ATOM
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0() { return cNameATOMTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//kind=ATOM
		public Assignment getKindAssignment_3() { return cKindAssignment_3; }

		//ATOM
		public RuleCall getKindATOMTerminalRuleCall_3_0() { return cKindATOMTerminalRuleCall_3_0; }

		//("{" EOL* ("debug" (":" debug+=Literal)? EOL+ | "owner" ":" owner+=ATOM EOL+ | other+=ATOM ":" (string+=STRING |
		//val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//EOL*
		public RuleCall getEOLParserRuleCall_4_1() { return cEOLParserRuleCall_4_1; }

		//("debug" (":" debug+=Literal)? EOL+ | "owner" ":" owner+=ATOM EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL
		//| literal+=Literal | val_real+=REAL_LITERAL) EOL+)*
		public Alternatives getAlternatives_4_2() { return cAlternatives_4_2; }

		//"debug" (":" debug+=Literal)? EOL+
		public Group getGroup_4_2_0() { return cGroup_4_2_0; }

		//"debug"
		public Keyword getDebugKeyword_4_2_0_0() { return cDebugKeyword_4_2_0_0; }

		//(":" debug+=Literal)?
		public Group getGroup_4_2_0_1() { return cGroup_4_2_0_1; }

		//":"
		public Keyword getColonKeyword_4_2_0_1_0() { return cColonKeyword_4_2_0_1_0; }

		//debug+=Literal
		public Assignment getDebugAssignment_4_2_0_1_1() { return cDebugAssignment_4_2_0_1_1; }

		//Literal
		public RuleCall getDebugLiteralParserRuleCall_4_2_0_1_1_0() { return cDebugLiteralParserRuleCall_4_2_0_1_1_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_0_2() { return cEOLParserRuleCall_4_2_0_2; }

		//"owner" ":" owner+=ATOM EOL+
		public Group getGroup_4_2_1() { return cGroup_4_2_1; }

		//"owner"
		public Keyword getOwnerKeyword_4_2_1_0() { return cOwnerKeyword_4_2_1_0; }

		//":"
		public Keyword getColonKeyword_4_2_1_1() { return cColonKeyword_4_2_1_1; }

		//owner+=ATOM
		public Assignment getOwnerAssignment_4_2_1_2() { return cOwnerAssignment_4_2_1_2; }

		//ATOM
		public RuleCall getOwnerATOMTerminalRuleCall_4_2_1_2_0() { return cOwnerATOMTerminalRuleCall_4_2_1_2_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_1_3() { return cEOLParserRuleCall_4_2_1_3; }

		//other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+
		public Group getGroup_4_2_2() { return cGroup_4_2_2; }

		//other+=ATOM
		public Assignment getOtherAssignment_4_2_2_0() { return cOtherAssignment_4_2_2_0; }

		//ATOM
		public RuleCall getOtherATOMTerminalRuleCall_4_2_2_0_0() { return cOtherATOMTerminalRuleCall_4_2_2_0_0; }

		//":"
		public Keyword getColonKeyword_4_2_2_1() { return cColonKeyword_4_2_2_1; }

		//string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL
		public Alternatives getAlternatives_4_2_2_2() { return cAlternatives_4_2_2_2; }

		//string+=STRING
		public Assignment getStringAssignment_4_2_2_2_0() { return cStringAssignment_4_2_2_2_0; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_4_2_2_2_0_0() { return cStringSTRINGTerminalRuleCall_4_2_2_2_0_0; }

		//val+=INT_LITERAL
		public Assignment getValAssignment_4_2_2_2_1() { return cValAssignment_4_2_2_2_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_4_2_2_2_1_0() { return cValINT_LITERALTerminalRuleCall_4_2_2_2_1_0; }

		//literal+=Literal
		public Assignment getLiteralAssignment_4_2_2_2_2() { return cLiteralAssignment_4_2_2_2_2; }

		//Literal
		public RuleCall getLiteralLiteralParserRuleCall_4_2_2_2_2_0() { return cLiteralLiteralParserRuleCall_4_2_2_2_2_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_4_2_2_2_3() { return cVal_realAssignment_4_2_2_2_3; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_4_2_2_2_3_0() { return cVal_realREAL_LITERALTerminalRuleCall_4_2_2_2_3_0; }

		//EOL+
		public RuleCall getEOLParserRuleCall_4_2_2_3() { return cEOLParserRuleCall_4_2_2_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }

		//EOL*
		public RuleCall getEOLParserRuleCall_5() { return cEOLParserRuleCall_5; }
	}

	public class HostElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Host");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cNameATOMTerminalRuleCall_0_0_0 = (RuleCall)cNameAssignment_0_0.eContents().get(0);
		private final Assignment cStringAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cStringAssignment_0_1.eContents().get(0);
		private final Assignment cIpAssignment_0_2 = (Assignment)cAlternatives_0.eContents().get(2);
		private final RuleCall cIpIPTerminalRuleCall_0_2_0 = (RuleCall)cIpAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_1_1_0 = (RuleCall)cValAssignment_1_1.eContents().get(0);
		
		//Host:
		//	(name=ATOM | string=STRING | ip=IP) (":" val=INT_LITERAL)?;
		public ParserRule getRule() { return rule; }

		//(name=ATOM | string=STRING | ip=IP) (":" val=INT_LITERAL)?
		public Group getGroup() { return cGroup; }

		//name=ATOM | string=STRING | ip=IP
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//name=ATOM
		public Assignment getNameAssignment_0_0() { return cNameAssignment_0_0; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_0_0_0() { return cNameATOMTerminalRuleCall_0_0_0; }

		//string=STRING
		public Assignment getStringAssignment_0_1() { return cStringAssignment_0_1; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_0_1_0() { return cStringSTRINGTerminalRuleCall_0_1_0; }

		//ip=IP
		public Assignment getIpAssignment_0_2() { return cIpAssignment_0_2; }

		//IP
		public RuleCall getIpIPTerminalRuleCall_0_2_0() { return cIpIPTerminalRuleCall_0_2_0; }

		//(":" val=INT_LITERAL)?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//val=INT_LITERAL
		public Assignment getValAssignment_1_1() { return cValAssignment_1_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_1_1_0() { return cValINT_LITERALTerminalRuleCall_1_1_0; }
	}

	public class FileNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FileName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFileNameAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cAlternatives_1.eContents().get(0);
		private final Keyword cSolidusKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cHyphenMinusKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0_2 = (Keyword)cAlternatives_1_0.eContents().get(2);
		private final Keyword cFullStopFullStopKeyword_1_0_3 = (Keyword)cAlternatives_1_0.eContents().get(3);
		private final Assignment cNameAssignment_1_0_4 = (Assignment)cAlternatives_1_0.eContents().get(4);
		private final RuleCall cNameATOMTerminalRuleCall_1_0_4_0 = (RuleCall)cNameAssignment_1_0_4.eContents().get(0);
		private final Assignment cStringAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cStringSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cStringAssignment_1_1.eContents().get(0);
		
		//FileName:
		//	{FileName} (("/" | "-" | "." | ".." | name+=ATOM)+ | string=STRING);
		public ParserRule getRule() { return rule; }

		//{FileName} (("/" | "-" | "." | ".." | name+=ATOM)+ | string=STRING)
		public Group getGroup() { return cGroup; }

		//{FileName}
		public Action getFileNameAction_0() { return cFileNameAction_0; }

		//("/" | "-" | "." | ".." | name+=ATOM)+ | string=STRING
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//("/" | "-" | "." | ".." | name+=ATOM)+
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"/"
		public Keyword getSolidusKeyword_1_0_0() { return cSolidusKeyword_1_0_0; }

		//"-"
		public Keyword getHyphenMinusKeyword_1_0_1() { return cHyphenMinusKeyword_1_0_1; }

		//"."
		public Keyword getFullStopKeyword_1_0_2() { return cFullStopKeyword_1_0_2; }

		//".."
		public Keyword getFullStopFullStopKeyword_1_0_3() { return cFullStopFullStopKeyword_1_0_3; }

		//name+=ATOM
		public Assignment getNameAssignment_1_0_4() { return cNameAssignment_1_0_4; }

		//ATOM
		public RuleCall getNameATOMTerminalRuleCall_1_0_4_0() { return cNameATOMTerminalRuleCall_1_0_4_0; }

		//string=STRING
		public Assignment getStringAssignment_1_1() { return cStringAssignment_1_1; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_1_1_0() { return cStringSTRINGTerminalRuleCall_1_1_0; }
	}

	public class ClassDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInfrastructureAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cInfrastructureFQNParserRuleCall_0_0 = (RuleCall)cInfrastructureAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Assignment cParameterAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final RuleCall cParameterParameterParserRuleCall_1_1_0_0 = (RuleCall)cParameterAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cGroup_1_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cParameterAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_1_1_1_1_0 = (RuleCall)cParameterAssignment_1_1_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//ClassDef:
		//	infrastructure=FQN ("(" (parameter+=Parameter ("," parameter+=Parameter)*)? ")")?;
		public ParserRule getRule() { return rule; }

		//infrastructure=FQN ("(" (parameter+=Parameter ("," parameter+=Parameter)*)? ")")?
		public Group getGroup() { return cGroup; }

		//infrastructure=FQN
		public Assignment getInfrastructureAssignment_0() { return cInfrastructureAssignment_0; }

		//FQN
		public RuleCall getInfrastructureFQNParserRuleCall_0_0() { return cInfrastructureFQNParserRuleCall_0_0; }

		//("(" (parameter+=Parameter ("," parameter+=Parameter)*)? ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//(parameter+=Parameter ("," parameter+=Parameter)*)?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//parameter+=Parameter
		public Assignment getParameterAssignment_1_1_0() { return cParameterAssignment_1_1_0; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_1_1_0_0() { return cParameterParameterParserRuleCall_1_1_0_0; }

		//("," parameter+=Parameter)*
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//","
		public Keyword getCommaKeyword_1_1_1_0() { return cCommaKeyword_1_1_1_0; }

		//parameter+=Parameter
		public Assignment getParameterAssignment_1_1_1_1() { return cParameterAssignment_1_1_1_1; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_1_1_1_1_0() { return cParameterParameterParserRuleCall_1_1_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cClassDefAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cClassDefClassDefParserRuleCall_0_0 = (RuleCall)cClassDefAssignment_0.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValINT_LITERALTerminalRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		private final Assignment cVal_realAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_2_0 = (RuleCall)cVal_realAssignment_2.eContents().get(0);
		private final Assignment cStringAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cStringSTRINGTerminalRuleCall_3_0 = (RuleCall)cStringAssignment_3.eContents().get(0);
		private final Assignment cListParametersAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cListParametersListParametersParserRuleCall_4_0 = (RuleCall)cListParametersAssignment_4.eContents().get(0);
		
		//Parameter:
		//	classDef=ClassDef | val=INT_LITERAL | val_real+=REAL_LITERAL | string=STRING | listParameters=ListParameters;
		public ParserRule getRule() { return rule; }

		//classDef=ClassDef | val=INT_LITERAL | val_real+=REAL_LITERAL | string=STRING | listParameters=ListParameters
		public Alternatives getAlternatives() { return cAlternatives; }

		//classDef=ClassDef
		public Assignment getClassDefAssignment_0() { return cClassDefAssignment_0; }

		//ClassDef
		public RuleCall getClassDefClassDefParserRuleCall_0_0() { return cClassDefClassDefParserRuleCall_0_0; }

		//val=INT_LITERAL
		public Assignment getValAssignment_1() { return cValAssignment_1; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_1_0() { return cValINT_LITERALTerminalRuleCall_1_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_2() { return cVal_realAssignment_2; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_2_0() { return cVal_realREAL_LITERALTerminalRuleCall_2_0; }

		//string=STRING
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_3_0() { return cStringSTRINGTerminalRuleCall_3_0; }

		//listParameters=ListParameters
		public Assignment getListParametersAssignment_4() { return cListParametersAssignment_4; }

		//ListParameters
		public RuleCall getListParametersListParametersParserRuleCall_4_0() { return cListParametersListParametersParserRuleCall_4_0; }
	}

	public class ListParametersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListParameters");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParameterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_1_0 = (RuleCall)cParameterAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cParameterAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cParameterParameterParserRuleCall_2_1_0 = (RuleCall)cParameterAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ListParameters:
		//	"[" parameter+=Parameter ("," parameter+=Parameter)* "]";
		public ParserRule getRule() { return rule; }

		//"[" parameter+=Parameter ("," parameter+=Parameter)* "]"
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//parameter+=Parameter
		public Assignment getParameterAssignment_1() { return cParameterAssignment_1; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_1_0() { return cParameterParameterParserRuleCall_1_0; }

		//("," parameter+=Parameter)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//parameter+=Parameter
		public Assignment getParameterAssignment_2_1() { return cParameterAssignment_2_1; }

		//Parameter
		public RuleCall getParameterParameterParserRuleCall_2_1_0() { return cParameterParameterParserRuleCall_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Literal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cTildeKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_0_1 = (Alternatives)cGroup_1_0.eContents().get(1);
		private final Assignment cPredAssignment_1_0_1_0 = (Assignment)cAlternatives_1_0_1.eContents().get(0);
		private final RuleCall cPredPredParserRuleCall_1_0_1_0_0 = (RuleCall)cPredAssignment_1_0_1_0.eContents().get(0);
		private final Assignment cVarAssignment_1_0_1_1 = (Assignment)cAlternatives_1_0_1.eContents().get(1);
		private final RuleCall cVarVarParserRuleCall_1_0_1_1_0 = (RuleCall)cVarAssignment_1_0_1_1.eContents().get(0);
		private final Keyword cTrueKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cFalseKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		
		//Literal:
		//	{Literal} ("~"? (pred=Pred | var=Var) | "true" | "false");
		public ParserRule getRule() { return rule; }

		//{Literal} ("~"? (pred=Pred | var=Var) | "true" | "false")
		public Group getGroup() { return cGroup; }

		//{Literal}
		public Action getLiteralAction_0() { return cLiteralAction_0; }

		//"~"? (pred=Pred | var=Var) | "true" | "false"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"~"? (pred=Pred | var=Var)
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"~"?
		public Keyword getTildeKeyword_1_0_0() { return cTildeKeyword_1_0_0; }

		//pred=Pred | var=Var
		public Alternatives getAlternatives_1_0_1() { return cAlternatives_1_0_1; }

		//pred=Pred
		public Assignment getPredAssignment_1_0_1_0() { return cPredAssignment_1_0_1_0; }

		//Pred
		public RuleCall getPredPredParserRuleCall_1_0_1_0_0() { return cPredPredParserRuleCall_1_0_1_0_0; }

		//var=Var
		public Assignment getVarAssignment_1_0_1_1() { return cVarAssignment_1_0_1_1; }

		//Var
		public RuleCall getVarVarParserRuleCall_1_0_1_1_0() { return cVarVarParserRuleCall_1_0_1_1_0; }

		//"true"
		public Keyword getTrueKeyword_1_1() { return cTrueKeyword_1_1; }

		//"false"
		public Keyword getFalseKeyword_1_2() { return cFalseKeyword_1_2; }
	}

	public class PredElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Pred");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPredAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cAtomAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cAtomATOMTerminalRuleCall_1_0_0 = (RuleCall)cAtomAssignment_1_0.eContents().get(0);
		private final Keyword cBeginKeyword_1_1 = (Keyword)cAlternatives_1.eContents().get(1);
		private final Keyword cEndKeyword_1_2 = (Keyword)cAlternatives_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTermsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTermsTermsParserRuleCall_2_1_0 = (RuleCall)cTermsAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cListAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cListListParserRuleCall_3_0 = (RuleCall)cListAssignment_3.eContents().get(0);
		
		//Pred:
		//	{Pred} (atom=ATOM | "begin" | "end") ("(" terms=Terms ")")? list=List?;
		public ParserRule getRule() { return rule; }

		//{Pred} (atom=ATOM | "begin" | "end") ("(" terms=Terms ")")? list=List?
		public Group getGroup() { return cGroup; }

		//{Pred}
		public Action getPredAction_0() { return cPredAction_0; }

		//atom=ATOM | "begin" | "end"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//atom=ATOM
		public Assignment getAtomAssignment_1_0() { return cAtomAssignment_1_0; }

		//ATOM
		public RuleCall getAtomATOMTerminalRuleCall_1_0_0() { return cAtomATOMTerminalRuleCall_1_0_0; }

		//"begin"
		public Keyword getBeginKeyword_1_1() { return cBeginKeyword_1_1; }

		//"end"
		public Keyword getEndKeyword_1_2() { return cEndKeyword_1_2; }

		//("(" terms=Terms ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//terms=Terms
		public Assignment getTermsAssignment_2_1() { return cTermsAssignment_2_1; }

		//Terms
		public RuleCall getTermsTermsParserRuleCall_2_1_0() { return cTermsTermsParserRuleCall_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//list=List?
		public Assignment getListAssignment_3() { return cListAssignment_3; }

		//List
		public RuleCall getListListParserRuleCall_3_0() { return cListListParserRuleCall_3_0; }
	}

	public class TermsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Terms");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTermAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTermTermParserRuleCall_0_0 = (RuleCall)cTermAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTermAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTermTermParserRuleCall_1_1_0 = (RuleCall)cTermAssignment_1_1.eContents().get(0);
		
		//Terms:
		//	term+=Term ("," term+=Term)*;
		public ParserRule getRule() { return rule; }

		//term+=Term ("," term+=Term)*
		public Group getGroup() { return cGroup; }

		//term+=Term
		public Assignment getTermAssignment_0() { return cTermAssignment_0; }

		//Term
		public RuleCall getTermTermParserRuleCall_0_0() { return cTermTermParserRuleCall_0_0; }

		//("," term+=Term)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//term+=Term
		public Assignment getTermAssignment_1_1() { return cTermAssignment_1_1; }

		//Term
		public RuleCall getTermTermParserRuleCall_1_1_0() { return cTermTermParserRuleCall_1_1_0; }
	}

	public class TermElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Term");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cListAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cListListParserRuleCall_0_0 = (RuleCall)cListAssignment_0.eContents().get(0);
		private final Assignment cLiteralAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cLiteralLiteralParserRuleCall_1_0 = (RuleCall)cLiteralAssignment_1.eContents().get(0);
		private final Assignment cStringAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cStringSTRINGTerminalRuleCall_2_0 = (RuleCall)cStringAssignment_2.eContents().get(0);
		private final Assignment cValAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cValINT_LITERALTerminalRuleCall_3_0 = (RuleCall)cValAssignment_3.eContents().get(0);
		private final Assignment cVal_realAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cVal_realREAL_LITERALTerminalRuleCall_4_0 = (RuleCall)cVal_realAssignment_4.eContents().get(0);
		
		//Term:
		//	list=List | literal=Literal | string=STRING | val=INT_LITERAL | val_real+=REAL_LITERAL;
		public ParserRule getRule() { return rule; }

		//list=List | literal=Literal | string=STRING | val=INT_LITERAL | val_real+=REAL_LITERAL
		public Alternatives getAlternatives() { return cAlternatives; }

		//list=List
		public Assignment getListAssignment_0() { return cListAssignment_0; }

		//List
		public RuleCall getListListParserRuleCall_0_0() { return cListListParserRuleCall_0_0; }

		//literal=Literal
		public Assignment getLiteralAssignment_1() { return cLiteralAssignment_1; }

		//Literal
		public RuleCall getLiteralLiteralParserRuleCall_1_0() { return cLiteralLiteralParserRuleCall_1_0; }

		//string=STRING
		public Assignment getStringAssignment_2() { return cStringAssignment_2; }

		//STRING
		public RuleCall getStringSTRINGTerminalRuleCall_2_0() { return cStringSTRINGTerminalRuleCall_2_0; }

		//val=INT_LITERAL
		public Assignment getValAssignment_3() { return cValAssignment_3; }

		//INT_LITERAL
		public RuleCall getValINT_LITERALTerminalRuleCall_3_0() { return cValINT_LITERALTerminalRuleCall_3_0; }

		//val_real+=REAL_LITERAL
		public Assignment getVal_realAssignment_4() { return cVal_realAssignment_4; }

		//REAL_LITERAL
		public RuleCall getVal_realREAL_LITERALTerminalRuleCall_4_0() { return cVal_realREAL_LITERALTerminalRuleCall_4_0; }
	}

	public class ListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "List");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTermAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTermTermParserRuleCall_2_0_0 = (RuleCall)cTermAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cTermAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cTermTermParserRuleCall_2_1_1_0 = (RuleCall)cTermAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cVerticalLineKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Alternatives cAlternatives_2_2_1 = (Alternatives)cGroup_2_2.eContents().get(1);
		private final Assignment cVarAssignment_2_2_1_0 = (Assignment)cAlternatives_2_2_1.eContents().get(0);
		private final RuleCall cVarVARTTerminalRuleCall_2_2_1_0_0 = (RuleCall)cVarAssignment_2_2_1_0.eContents().get(0);
		private final Assignment cUnnamedvarAssignment_2_2_1_1 = (Assignment)cAlternatives_2_2_1.eContents().get(1);
		private final RuleCall cUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0 = (RuleCall)cUnnamedvarAssignment_2_2_1_1.eContents().get(0);
		private final Assignment cListAssignment_2_2_1_2 = (Assignment)cAlternatives_2_2_1.eContents().get(2);
		private final RuleCall cListListParserRuleCall_2_2_1_2_0 = (RuleCall)cListAssignment_2_2_1_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//List:
		//	{List} "[" (term+=Term ("," term+=Term)* ("|" (var=VART | unnamedvar=UNNAMEDVART | list=List))?)? "]";
		public ParserRule getRule() { return rule; }

		//{List} "[" (term+=Term ("," term+=Term)* ("|" (var=VART | unnamedvar=UNNAMEDVART | list=List))?)? "]"
		public Group getGroup() { return cGroup; }

		//{List}
		public Action getListAction_0() { return cListAction_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//(term+=Term ("," term+=Term)* ("|" (var=VART | unnamedvar=UNNAMEDVART | list=List))?)?
		public Group getGroup_2() { return cGroup_2; }

		//term+=Term
		public Assignment getTermAssignment_2_0() { return cTermAssignment_2_0; }

		//Term
		public RuleCall getTermTermParserRuleCall_2_0_0() { return cTermTermParserRuleCall_2_0_0; }

		//("," term+=Term)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//term+=Term
		public Assignment getTermAssignment_2_1_1() { return cTermAssignment_2_1_1; }

		//Term
		public RuleCall getTermTermParserRuleCall_2_1_1_0() { return cTermTermParserRuleCall_2_1_1_0; }

		//("|" (var=VART | unnamedvar=UNNAMEDVART | list=List))?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"|"
		public Keyword getVerticalLineKeyword_2_2_0() { return cVerticalLineKeyword_2_2_0; }

		//var=VART | unnamedvar=UNNAMEDVART | list=List
		public Alternatives getAlternatives_2_2_1() { return cAlternatives_2_2_1; }

		//var=VART
		public Assignment getVarAssignment_2_2_1_0() { return cVarAssignment_2_2_1_0; }

		//VART
		public RuleCall getVarVARTTerminalRuleCall_2_2_1_0_0() { return cVarVARTTerminalRuleCall_2_2_1_0_0; }

		//unnamedvar=UNNAMEDVART
		public Assignment getUnnamedvarAssignment_2_2_1_1() { return cUnnamedvarAssignment_2_2_1_1; }

		//UNNAMEDVART
		public RuleCall getUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0() { return cUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0; }

		//list=List
		public Assignment getListAssignment_2_2_1_2() { return cListAssignment_2_2_1_2; }

		//List
		public RuleCall getListListParserRuleCall_2_2_1_2_0() { return cListListParserRuleCall_2_2_1_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class VarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Var");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cVarAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final RuleCall cVarVARTTerminalRuleCall_0_0_0 = (RuleCall)cVarAssignment_0_0.eContents().get(0);
		private final Assignment cUnnamedvarAssignment_0_1 = (Assignment)cAlternatives_0.eContents().get(1);
		private final RuleCall cUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0 = (RuleCall)cUnnamedvarAssignment_0_1.eContents().get(0);
		private final Assignment cListAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListListParserRuleCall_1_0 = (RuleCall)cListAssignment_1.eContents().get(0);
		
		//Var:
		//	(var=VART | unnamedvar=UNNAMEDVART) list=List?;
		public ParserRule getRule() { return rule; }

		//(var=VART | unnamedvar=UNNAMEDVART) list=List?
		public Group getGroup() { return cGroup; }

		//var=VART | unnamedvar=UNNAMEDVART
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//var=VART
		public Assignment getVarAssignment_0_0() { return cVarAssignment_0_0; }

		//VART
		public RuleCall getVarVARTTerminalRuleCall_0_0_0() { return cVarVARTTerminalRuleCall_0_0_0; }

		//unnamedvar=UNNAMEDVART
		public Assignment getUnnamedvarAssignment_0_1() { return cUnnamedvarAssignment_0_1; }

		//UNNAMEDVART
		public RuleCall getUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0() { return cUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0; }

		//list=List?
		public Assignment getListAssignment_1() { return cListAssignment_1; }

		//List
		public RuleCall getListListParserRuleCall_1_0() { return cListListParserRuleCall_1_0; }
	}

	public class EOLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EOL");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNEWLINETerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSL_COMMENTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EOL:
		//	NEWLINE | SL_COMMENT;
		public ParserRule getRule() { return rule; }

		//NEWLINE | SL_COMMENT
		public Alternatives getAlternatives() { return cAlternatives; }

		//NEWLINE
		public RuleCall getNEWLINETerminalRuleCall_0() { return cNEWLINETerminalRuleCall_0; }

		//SL_COMMENT
		public RuleCall getSL_COMMENTTerminalRuleCall_1() { return cSL_COMMENTTerminalRuleCall_1; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cVARTTerminalRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cATOMTerminalRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final RuleCall cVARTTerminalRuleCall_1_1_0 = (RuleCall)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cATOMTerminalRuleCall_1_1_1 = (RuleCall)cAlternatives_1_1.eContents().get(1);
		
		//FQN returns ecore::EString:
		//	(VART | ATOM) ("." (VART | ATOM))*;
		public ParserRule getRule() { return rule; }

		//(VART | ATOM) ("." (VART | ATOM))*
		public Group getGroup() { return cGroup; }

		//VART | ATOM
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//VART
		public RuleCall getVARTTerminalRuleCall_0_0() { return cVARTTerminalRuleCall_0_0; }

		//ATOM
		public RuleCall getATOMTerminalRuleCall_0_1() { return cATOMTerminalRuleCall_0_1; }

		//("." (VART | ATOM))*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//VART | ATOM
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//VART
		public RuleCall getVARTTerminalRuleCall_1_1_0() { return cVARTTerminalRuleCall_1_1_0; }

		//ATOM
		public RuleCall getATOMTerminalRuleCall_1_1_1() { return cATOMTerminalRuleCall_1_1_1; }
	}
	
	
	private JcmModelElements pJcmModel;
	private DUsesElements pDUses;
	private DClassPathElements pDClassPath;
	private DAslPathElements pDAslPath;
	private DPlatformElements pDPlatform;
	private DNodeElements pDNode;
	private AgentElements pAgent;
	private WorkspaceElements pWorkspace;
	private ArtifactElements pArtifact;
	private OrganisationElements pOrganisation;
	private OFileNameElements pOFileName;
	private ONodeElements pONode;
	private OAgentsElements pOAgents;
	private OOthersElements pOOthers;
	private GroupElements pGroup;
	private SchemeElements pScheme;
	private HostElements pHost;
	private FileNameElements pFileName;
	private ClassDefElements pClassDef;
	private ParameterElements pParameter;
	private ListParametersElements pListParameters;
	private LiteralElements pLiteral;
	private PredElements pPred;
	private TermsElements pTerms;
	private TermElements pTerm;
	private ListElements pList;
	private VarElements pVar;
	private EOLElements pEOL;
	private FQNElements pFQN;
	private TerminalRule tIP;
	private TerminalRule tATOM;
	private TerminalRule tVART;
	private TerminalRule tUNNAMEDVART;
	private TerminalRule tCHAR;
	private TerminalRule tLETTER;
	private TerminalRule tLCLETTER;
	private TerminalRule tUCLETTER;
	private TerminalRule tDIGIT;
	private TerminalRule tSTRING;
	private TerminalRule tINT_LITERAL;
	private TerminalRule tREAL_LITERAL;
	private TerminalRule tIntegerNumber;
	private TerminalRule tHexPrefix;
	private TerminalRule tHexDigit;
	private TerminalRule tWS;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tNEWLINE;
	
	private final Grammar grammar;

	@Inject
	public JcmGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("jacamoide.xtext.jcm.Jcm".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//JcmModel:
	//	EOL* "mas" name=ATOM uses=DUses? EOL* "{" EOL* agent+=Agent* workspace+=Workspace* organisation+=Organisation*
	//	(dclassPath+=DClassPath | dAslPath+=DAslPath | dPlatform+=DPlatform | dNode+=DNode)* "}" EOL*;
	public JcmModelElements getJcmModelAccess() {
		return (pJcmModel != null) ? pJcmModel : (pJcmModel = new JcmModelElements());
	}
	
	public ParserRule getJcmModelRule() {
		return getJcmModelAccess().getRule();
	}

	//DUses:
	//	"uses" fileName+=FileName ("," fileName+=FileName)*;
	public DUsesElements getDUsesAccess() {
		return (pDUses != null) ? pDUses : (pDUses = new DUsesElements());
	}
	
	public ParserRule getDUsesRule() {
		return getDUsesAccess().getRule();
	}

	//DClassPath:
	//	{DClassPath} "class-path" ":" (classPath+=FileName (EOL | ",")+)*;
	public DClassPathElements getDClassPathAccess() {
		return (pDClassPath != null) ? pDClassPath : (pDClassPath = new DClassPathElements());
	}
	
	public ParserRule getDClassPathRule() {
		return getDClassPathAccess().getRule();
	}

	//DAslPath:
	//	{DAslPath} "asl-path" ":" (aslPath+=FileName (EOL | ",")+)*;
	public DAslPathElements getDAslPathAccess() {
		return (pDAslPath != null) ? pDAslPath : (pDAslPath = new DAslPathElements());
	}
	
	public ParserRule getDAslPathRule() {
		return getDAslPathAccess().getRule();
	}

	//DPlatform:
	//	{DPlatform} "platform" ":" (platform+=ClassDef (EOL | ",")+)*;
	public DPlatformElements getDPlatformAccess() {
		return (pDPlatform != null) ? pDPlatform : (pDPlatform = new DPlatformElements());
	}
	
	public ParserRule getDPlatformRule() {
		return getDPlatformAccess().getRule();
	}

	//DNode:
	//	"node" name=ATOM "running"? ("@" host=Host)? (EOL | ",")+;
	public DNodeElements getDNodeAccess() {
		return (pDNode != null) ? pDNode : (pDNode = new DNodeElements());
	}
	
	public ParserRule getDNodeRule() {
		return getDNodeAccess().getRule();
	}

	//Agent:
	//	"agent" name=ATOM (":" source+=FileName)? ("{" EOL* ("instances" ":" (instances+=INT_LITERAL (EOL | ",")+ |
	//	(instancesAtom+=ATOM (EOL | ",")+)*) | "node" ":" node+=ATOM EOL+ | "ag-arch" ":" (agArch+=ClassDef (EOL | ",")+)* |
	//	"ag-class" ":" agClass+=ClassDef EOL+ | "ag-bb-class" ":" agbbClass+=ClassDef EOL+ | "beliefs" ":" (beliefs+=Literal
	//	(EOL | ",")+)* | "goals" ":" (goals+=Literal (EOL | ",")+)* | "focus" ":" (focus+=ATOM ("@" focusNode+=ATOM)? (EOL |
	//	",")+)* | "join" ":" (join+=ATOM ("@" joinNode+=ATOM)? (EOL | ",")+)* | "roles" ":" (role+=ATOM "in" group+=ATOM ("@"
	//	groupNode+=ATOM)? (EOL | ",")+)* | "debug" ":" debug+=Literal (EOL | ",")+ | "verbose" ":" verbose+=INT_LITERAL EOL+ |
	//	"nrcbp" ":" nrcbp+=INT_LITERAL EOL+ | "events" ":" ("discard" | "requeue" | "retrieve") EOL+ | "intBels" ":"
	//	("sameFocus" | "newFocus") EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal |
	//	val_real+=REAL_LITERAL) EOL+)* "}")? EOL*;
	public AgentElements getAgentAccess() {
		return (pAgent != null) ? pAgent : (pAgent = new AgentElements());
	}
	
	public ParserRule getAgentRule() {
		return getAgentAccess().getRule();
	}

	//Workspace:
	//	"workspace" name=ATOM "{" EOL* (artifact+=Artifact | "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)* | "debug" (":"
	//	debug+=Literal)? EOL+ | node+=ONode)* "}" EOL*;
	public WorkspaceElements getWorkspaceAccess() {
		return (pWorkspace != null) ? pWorkspace : (pWorkspace = new WorkspaceElements());
	}
	
	public ParserRule getWorkspaceRule() {
		return getWorkspaceAccess().getRule();
	}

	//Artifact:
	//	"artifact" name=ATOM ":" classDef=ClassDef ("{" EOL* ("focused-by" ":" ((agent+=ATOM | "*") (EOL | ",")+)*)? "}")?
	//	EOL*;
	public ArtifactElements getArtifactAccess() {
		return (pArtifact != null) ? pArtifact : (pArtifact = new ArtifactElements());
	}
	
	public ParserRule getArtifactRule() {
		return getArtifactAccess().getRule();
	}

	//Organisation:
	//	"organisation" name=ATOM fileName=OFileName? "{" EOL* (group+=Group | scheme+=Scheme | agents+=OAgents | node+=ONode |
	//	other+=OOthers)* "}" EOL*;
	public OrganisationElements getOrganisationAccess() {
		return (pOrganisation != null) ? pOrganisation : (pOrganisation = new OrganisationElements());
	}
	
	public ParserRule getOrganisationRule() {
		return getOrganisationAccess().getRule();
	}

	//OFileName:
	//	":" name=FileName;
	public OFileNameElements getOFileNameAccess() {
		return (pOFileName != null) ? pOFileName : (pOFileName = new OFileNameElements());
	}
	
	public ParserRule getOFileNameRule() {
		return getOFileNameAccess().getRule();
	}

	//ONode:
	//	"node" ":" name=ATOM EOL+;
	public ONodeElements getONodeAccess() {
		return (pONode != null) ? pONode : (pONode = new ONodeElements());
	}
	
	public ParserRule getONodeRule() {
		return getONodeAccess().getRule();
	}

	//OAgents:
	//	{OAgents} "agents" ":" ((agent+=ATOM | "*") (EOL | ",")+)*;
	public OAgentsElements getOAgentsAccess() {
		return (pOAgents != null) ? pOAgents : (pOAgents = new OAgentsElements());
	}
	
	public ParserRule getOAgentsRule() {
		return getOAgentsAccess().getRule();
	}

	//OOthers:
	//	name=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+;
	public OOthersElements getOOthersAccess() {
		return (pOOthers != null) ? pOOthers : (pOOthers = new OOthersElements());
	}
	
	public ParserRule getOOthersRule() {
		return getOOthersAccess().getRule();
	}

	//Group:
	//	"group" name=ATOM ":" kind=ATOM ("{" EOL* (group+=Group | "responsible-for" ":" responsibleFor+=ATOM EOL+ | "owner"
	//	":" owner+=ATOM EOL+ | "debug" (":" debug+=Literal)? EOL+ | other+=ATOM ":" (string+=STRING | val+=INT_LITERAL |
	//	literal+=Literal | val_real+=REAL_LITERAL) EOL+ | "players" ":" (agent+=ATOM role+=ATOM (EOL | ",")+)*)* "}")? EOL*;
	public GroupElements getGroupAccess() {
		return (pGroup != null) ? pGroup : (pGroup = new GroupElements());
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}

	//Scheme:
	//	"scheme" name=ATOM ":" kind=ATOM ("{" EOL* ("debug" (":" debug+=Literal)? EOL+ | "owner" ":" owner+=ATOM EOL+ |
	//	other+=ATOM ":" (string+=STRING | val+=INT_LITERAL | literal+=Literal | val_real+=REAL_LITERAL) EOL+)* "}")? EOL*;
	public SchemeElements getSchemeAccess() {
		return (pScheme != null) ? pScheme : (pScheme = new SchemeElements());
	}
	
	public ParserRule getSchemeRule() {
		return getSchemeAccess().getRule();
	}

	//Host:
	//	(name=ATOM | string=STRING | ip=IP) (":" val=INT_LITERAL)?;
	public HostElements getHostAccess() {
		return (pHost != null) ? pHost : (pHost = new HostElements());
	}
	
	public ParserRule getHostRule() {
		return getHostAccess().getRule();
	}

	//FileName:
	//	{FileName} (("/" | "-" | "." | ".." | name+=ATOM)+ | string=STRING);
	public FileNameElements getFileNameAccess() {
		return (pFileName != null) ? pFileName : (pFileName = new FileNameElements());
	}
	
	public ParserRule getFileNameRule() {
		return getFileNameAccess().getRule();
	}

	//ClassDef:
	//	infrastructure=FQN ("(" (parameter+=Parameter ("," parameter+=Parameter)*)? ")")?;
	public ClassDefElements getClassDefAccess() {
		return (pClassDef != null) ? pClassDef : (pClassDef = new ClassDefElements());
	}
	
	public ParserRule getClassDefRule() {
		return getClassDefAccess().getRule();
	}

	//Parameter:
	//	classDef=ClassDef | val=INT_LITERAL | val_real+=REAL_LITERAL | string=STRING | listParameters=ListParameters;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//ListParameters:
	//	"[" parameter+=Parameter ("," parameter+=Parameter)* "]";
	public ListParametersElements getListParametersAccess() {
		return (pListParameters != null) ? pListParameters : (pListParameters = new ListParametersElements());
	}
	
	public ParserRule getListParametersRule() {
		return getListParametersAccess().getRule();
	}

	//Literal:
	//	{Literal} ("~"? (pred=Pred | var=Var) | "true" | "false");
	public LiteralElements getLiteralAccess() {
		return (pLiteral != null) ? pLiteral : (pLiteral = new LiteralElements());
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}

	//Pred:
	//	{Pred} (atom=ATOM | "begin" | "end") ("(" terms=Terms ")")? list=List?;
	public PredElements getPredAccess() {
		return (pPred != null) ? pPred : (pPred = new PredElements());
	}
	
	public ParserRule getPredRule() {
		return getPredAccess().getRule();
	}

	//Terms:
	//	term+=Term ("," term+=Term)*;
	public TermsElements getTermsAccess() {
		return (pTerms != null) ? pTerms : (pTerms = new TermsElements());
	}
	
	public ParserRule getTermsRule() {
		return getTermsAccess().getRule();
	}

	//Term:
	//	list=List | literal=Literal | string=STRING | val=INT_LITERAL | val_real+=REAL_LITERAL;
	public TermElements getTermAccess() {
		return (pTerm != null) ? pTerm : (pTerm = new TermElements());
	}
	
	public ParserRule getTermRule() {
		return getTermAccess().getRule();
	}

	//List:
	//	{List} "[" (term+=Term ("," term+=Term)* ("|" (var=VART | unnamedvar=UNNAMEDVART | list=List))?)? "]";
	public ListElements getListAccess() {
		return (pList != null) ? pList : (pList = new ListElements());
	}
	
	public ParserRule getListRule() {
		return getListAccess().getRule();
	}

	//Var:
	//	(var=VART | unnamedvar=UNNAMEDVART) list=List?;
	public VarElements getVarAccess() {
		return (pVar != null) ? pVar : (pVar = new VarElements());
	}
	
	public ParserRule getVarRule() {
		return getVarAccess().getRule();
	}

	//EOL:
	//	NEWLINE | SL_COMMENT;
	public EOLElements getEOLAccess() {
		return (pEOL != null) ? pEOL : (pEOL = new EOLElements());
	}
	
	public ParserRule getEOLRule() {
		return getEOLAccess().getRule();
	}

	//FQN returns ecore::EString:
	//	(VART | ATOM) ("." (VART | ATOM))*;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//terminal IP:
	//	INT_LITERAL+ "." INT_LITERAL+ "." INT_LITERAL+ "." INT_LITERAL+;
	public TerminalRule getIPRule() {
		return (tIP != null) ? tIP : (tIP = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IP"));
	} 

	//terminal ATOM:
	//	(LCLETTER | "." CHAR) (CHAR | "." CHAR)*;
	public TerminalRule getATOMRule() {
		return (tATOM != null) ? tATOM : (tATOM = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ATOM"));
	} 

	//terminal VART:
	//	UCLETTER CHAR*;
	public TerminalRule getVARTRule() {
		return (tVART != null) ? tVART : (tVART = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "VART"));
	} 

	//terminal UNNAMEDVART:
	//	"_" CHAR*;
	public TerminalRule getUNNAMEDVARTRule() {
		return (tUNNAMEDVART != null) ? tUNNAMEDVART : (tUNNAMEDVART = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "UNNAMEDVART"));
	} 

	//terminal fragment CHAR:
	//	LETTER | DIGIT | "_";
	public TerminalRule getCHARRule() {
		return (tCHAR != null) ? tCHAR : (tCHAR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "CHAR"));
	} 

	//terminal fragment LETTER:
	//	LCLETTER | UCLETTER;
	public TerminalRule getLETTERRule() {
		return (tLETTER != null) ? tLETTER : (tLETTER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LETTER"));
	} 

	//terminal fragment LCLETTER:
	//	"a".."z";
	public TerminalRule getLCLETTERRule() {
		return (tLCLETTER != null) ? tLCLETTER : (tLCLETTER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LCLETTER"));
	} 

	//terminal fragment UCLETTER:
	//	"A".."Z";
	public TerminalRule getUCLETTERRule() {
		return (tUCLETTER != null) ? tUCLETTER : (tUCLETTER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "UCLETTER"));
	} 

	//terminal fragment DIGIT:
	//	"0".."9";
	public TerminalRule getDIGITRule() {
		return (tDIGIT != null) ? tDIGIT : (tDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DIGIT"));
	} 

	////terminal EOL: '\n';
	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	//terminal INT_LITERAL returns ecore::EInt:
	//	IntegerNumber;
	public TerminalRule getINT_LITERALRule() {
		return (tINT_LITERAL != null) ? tINT_LITERAL : (tINT_LITERAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT_LITERAL"));
	} 

	//terminal REAL_LITERAL returns ecore::EDouble:
	//	IntegerNumber? "." IntegerNumber;
	public TerminalRule getREAL_LITERALRule() {
		return (tREAL_LITERAL != null) ? tREAL_LITERAL : (tREAL_LITERAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REAL_LITERAL"));
	} 

	//terminal fragment IntegerNumber:
	//	"0" | "1".."9" "0".."9"* | "0" "0".."7"+ | HexPrefix HexDigit+;
	public TerminalRule getIntegerNumberRule() {
		return (tIntegerNumber != null) ? tIntegerNumber : (tIntegerNumber = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "IntegerNumber"));
	} 

	//terminal fragment HexPrefix:
	//	"0x" | "0X";
	public TerminalRule getHexPrefixRule() {
		return (tHexPrefix != null) ? tHexPrefix : (tHexPrefix = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HexPrefix"));
	} 

	//terminal fragment HexDigit:
	//	"0".."9" | "a".."f" | "A".."F";
	public TerminalRule getHexDigitRule() {
		return (tHexDigit != null) ? tHexDigit : (tHexDigit = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HexDigit"));
	} 

	/// ********************  Skip whitespace RULE ******************** / terminal WS:
	//	(" " | "\t" | "\r")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	/// ********************  Skip multi-line comments RULE ******************** / terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	/// ********************  Skip single-line comments RULE ******************** / //terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal NEWLINE:
	//	"\r"? "\n";
	public TerminalRule getNEWLINERule() {
		return (tNEWLINE != null) ? tNEWLINE : (tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NEWLINE"));
	} 
}
