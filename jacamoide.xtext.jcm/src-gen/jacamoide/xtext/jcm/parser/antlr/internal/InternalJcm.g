/*
* generated by Xtext
*/
grammar InternalJcm;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package jacamoide.xtext.jcm.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package jacamoide.xtext.jcm.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import jacamoide.xtext.jcm.services.JcmGrammarAccess;

}

@parser::members {

 	private JcmGrammarAccess grammarAccess;
 	
    public InternalJcmParser(TokenStream input, JcmGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "JcmModel";	
   	}
   	
   	@Override
   	protected JcmGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleJcmModel
entryRuleJcmModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJcmModelRule()); }
	 iv_ruleJcmModel=ruleJcmModel 
	 { $current=$iv_ruleJcmModel.current; } 
	 EOF 
;

// Rule JcmModel
ruleJcmModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getJcmModelAccess().getEOLParserRuleCall_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_1='mas' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJcmModelAccess().getMasKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ATOM
		{
			newLeafNode(lv_name_2_0, grammarAccess.getJcmModelAccess().getNameATOMTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJcmModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ATOM");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getUsesDUsesParserRuleCall_3_0()); 
	    }
		lv_uses_3_0=ruleDUses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		set(
       			$current, 
       			"uses",
        		lv_uses_3_0, 
        		"DUses");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
    { 
        newCompositeNode(grammarAccess.getJcmModelAccess().getEOLParserRuleCall_4()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJcmModelAccess().getLeftCurlyBracketKeyword_5());
    }
(
    { 
        newCompositeNode(grammarAccess.getJcmModelAccess().getEOLParserRuleCall_6()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getAgentAgentParserRuleCall_7_0()); 
	    }
		lv_agent_7_0=ruleAgent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"agent",
        		lv_agent_7_0, 
        		"Agent");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getWorkspaceWorkspaceParserRuleCall_8_0()); 
	    }
		lv_workspace_8_0=ruleWorkspace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"workspace",
        		lv_workspace_8_0, 
        		"Workspace");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getOrganisationOrganisationParserRuleCall_9_0()); 
	    }
		lv_organisation_9_0=ruleOrganisation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"organisation",
        		lv_organisation_9_0, 
        		"Organisation");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getDclassPathDClassPathParserRuleCall_10_0_0()); 
	    }
		lv_dclassPath_10_0=ruleDClassPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"dclassPath",
        		lv_dclassPath_10_0, 
        		"DClassPath");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getDAslPathDAslPathParserRuleCall_10_1_0()); 
	    }
		lv_dAslPath_11_0=ruleDAslPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"dAslPath",
        		lv_dAslPath_11_0, 
        		"DAslPath");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getDPlatformDPlatformParserRuleCall_10_2_0()); 
	    }
		lv_dPlatform_12_0=ruleDPlatform		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"dPlatform",
        		lv_dPlatform_12_0, 
        		"DPlatform");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getJcmModelAccess().getDNodeDNodeParserRuleCall_10_3_0()); 
	    }
		lv_dNode_13_0=ruleDNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJcmModelRule());
	        }
       		add(
       			$current, 
       			"dNode",
        		lv_dNode_13_0, 
        		"DNode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getJcmModelAccess().getRightCurlyBracketKeyword_11());
    }
(
    { 
        newCompositeNode(grammarAccess.getJcmModelAccess().getEOLParserRuleCall_12()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleDUses
entryRuleDUses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDUsesRule()); }
	 iv_ruleDUses=ruleDUses 
	 { $current=$iv_ruleDUses.current; } 
	 EOF 
;

// Rule DUses
ruleDUses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='uses' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDUsesAccess().getUsesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDUsesAccess().getFileNameFileNameParserRuleCall_1_0()); 
	    }
		lv_fileName_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDUsesRule());
	        }
       		add(
       			$current, 
       			"fileName",
        		lv_fileName_1_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDUsesAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDUsesAccess().getFileNameFileNameParserRuleCall_2_1_0()); 
	    }
		lv_fileName_3_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDUsesRule());
	        }
       		add(
       			$current, 
       			"fileName",
        		lv_fileName_3_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDClassPath
entryRuleDClassPath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDClassPathRule()); }
	 iv_ruleDClassPath=ruleDClassPath 
	 { $current=$iv_ruleDClassPath.current; } 
	 EOF 
;

// Rule DClassPath
ruleDClassPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDClassPathAccess().getDClassPathAction_0(),
            $current);
    }
)	otherlv_1='class-path' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDClassPathAccess().getClassPathKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDClassPathAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDClassPathAccess().getClassPathFileNameParserRuleCall_3_0_0()); 
	    }
		lv_classPath_3_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDClassPathRule());
	        }
       		add(
       			$current, 
       			"classPath",
        		lv_classPath_3_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getDClassPathAccess().getEOLParserRuleCall_3_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDClassPathAccess().getCommaKeyword_3_1_1());
    }
)+)*)
;





// Entry rule entryRuleDAslPath
entryRuleDAslPath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDAslPathRule()); }
	 iv_ruleDAslPath=ruleDAslPath 
	 { $current=$iv_ruleDAslPath.current; } 
	 EOF 
;

// Rule DAslPath
ruleDAslPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDAslPathAccess().getDAslPathAction_0(),
            $current);
    }
)	otherlv_1='asl-path' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDAslPathAccess().getAslPathKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDAslPathAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDAslPathAccess().getAslPathFileNameParserRuleCall_3_0_0()); 
	    }
		lv_aslPath_3_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDAslPathRule());
	        }
       		add(
       			$current, 
       			"aslPath",
        		lv_aslPath_3_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getDAslPathAccess().getEOLParserRuleCall_3_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDAslPathAccess().getCommaKeyword_3_1_1());
    }
)+)*)
;





// Entry rule entryRuleDPlatform
entryRuleDPlatform returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDPlatformRule()); }
	 iv_ruleDPlatform=ruleDPlatform 
	 { $current=$iv_ruleDPlatform.current; } 
	 EOF 
;

// Rule DPlatform
ruleDPlatform returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDPlatformAccess().getDPlatformAction_0(),
            $current);
    }
)	otherlv_1='platform' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDPlatformAccess().getPlatformKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDPlatformAccess().getColonKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDPlatformAccess().getPlatformClassDefParserRuleCall_3_0_0()); 
	    }
		lv_platform_3_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDPlatformRule());
	        }
       		add(
       			$current, 
       			"platform",
        		lv_platform_3_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getDPlatformAccess().getEOLParserRuleCall_3_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDPlatformAccess().getCommaKeyword_3_1_1());
    }
)+)*)
;





// Entry rule entryRuleDNode
entryRuleDNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDNodeRule()); }
	 iv_ruleDNode=ruleDNode 
	 { $current=$iv_ruleDNode.current; } 
	 EOF 
;

// Rule DNode
ruleDNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='node' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDNodeAccess().getNodeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDNodeAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDNodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)(	otherlv_2='running' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDNodeAccess().getRunningKeyword_2());
    }
)?(	otherlv_3='@' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDNodeAccess().getCommercialAtKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDNodeAccess().getHostHostParserRuleCall_3_1_0()); 
	    }
		lv_host_4_0=ruleHost		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDNodeRule());
	        }
       		set(
       			$current, 
       			"host",
        		lv_host_4_0, 
        		"Host");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getDNodeAccess().getEOLParserRuleCall_4_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDNodeAccess().getCommaKeyword_4_1());
    }
)+)
;





// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	 iv_ruleAgent=ruleAgent 
	 { $current=$iv_ruleAgent.current; } 
	 EOF 
;

// Rule Agent
ruleAgent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='agent' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgentAccess().getAgentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAgentAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAgentAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getSourceFileNameParserRuleCall_2_1_0()); 
	    }
		lv_source_3_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"source",
        		lv_source_3_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAgentAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*((	otherlv_6='instances' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAgentAccess().getInstancesKeyword_3_2_0_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAgentAccess().getColonKeyword_3_2_0_1());
    }
(((
(
		lv_instances_8_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_instances_8_0, grammarAccess.getAgentAccess().getInstancesINT_LITERALTerminalRuleCall_3_2_0_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"instances",
        		lv_instances_8_0, 
        		"INT_LITERAL");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_0_2_0_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAgentAccess().getCommaKeyword_3_2_0_2_0_1_1());
    }
)+)
    |((
(
		lv_instancesAtom_11_0=RULE_ATOM
		{
			newLeafNode(lv_instancesAtom_11_0, grammarAccess.getAgentAccess().getInstancesAtomATOMTerminalRuleCall_3_2_0_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"instancesAtom",
        		lv_instancesAtom_11_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_0_2_1_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAgentAccess().getCommaKeyword_3_2_0_2_1_1_1());
    }
)+)*))
    |(	otherlv_14='node' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAgentAccess().getNodeKeyword_3_2_1_0());
    }
	otherlv_15=':' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAgentAccess().getColonKeyword_3_2_1_1());
    }
(
(
		lv_node_16_0=RULE_ATOM
		{
			newLeafNode(lv_node_16_0, grammarAccess.getAgentAccess().getNodeATOMTerminalRuleCall_3_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"node",
        		lv_node_16_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_1_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_18='ag-arch' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getAgentAccess().getAgArchKeyword_3_2_2_0());
    }
	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getAgentAccess().getColonKeyword_3_2_2_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getAgArchClassDefParserRuleCall_3_2_2_2_0_0()); 
	    }
		lv_agArch_20_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"agArch",
        		lv_agArch_20_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_2_2_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_22=',' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getAgentAccess().getCommaKeyword_3_2_2_2_1_1());
    }
)+)*)
    |(	otherlv_23='ag-class' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getAgentAccess().getAgClassKeyword_3_2_3_0());
    }
	otherlv_24=':' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getAgentAccess().getColonKeyword_3_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getAgClassClassDefParserRuleCall_3_2_3_2_0()); 
	    }
		lv_agClass_25_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"agClass",
        		lv_agClass_25_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_3_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_27='ag-bb-class' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getAgentAccess().getAgBbClassKeyword_3_2_4_0());
    }
	otherlv_28=':' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getAgentAccess().getColonKeyword_3_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getAgbbClassClassDefParserRuleCall_3_2_4_2_0()); 
	    }
		lv_agbbClass_29_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"agbbClass",
        		lv_agbbClass_29_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_4_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_31='beliefs' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getAgentAccess().getBeliefsKeyword_3_2_5_0());
    }
	otherlv_32=':' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getAgentAccess().getColonKeyword_3_2_5_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getBeliefsLiteralParserRuleCall_3_2_5_2_0_0()); 
	    }
		lv_beliefs_33_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"beliefs",
        		lv_beliefs_33_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_5_2_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_35=',' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getAgentAccess().getCommaKeyword_3_2_5_2_1_1());
    }
)+)*)
    |(	otherlv_36='goals' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getAgentAccess().getGoalsKeyword_3_2_6_0());
    }
	otherlv_37=':' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getAgentAccess().getColonKeyword_3_2_6_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getGoalsLiteralParserRuleCall_3_2_6_2_0_0()); 
	    }
		lv_goals_38_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"goals",
        		lv_goals_38_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_6_2_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_40=',' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getAgentAccess().getCommaKeyword_3_2_6_2_1_1());
    }
)+)*)
    |(	otherlv_41='focus' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getAgentAccess().getFocusKeyword_3_2_7_0());
    }
	otherlv_42=':' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getAgentAccess().getColonKeyword_3_2_7_1());
    }
((
(
		lv_focus_43_0=RULE_ATOM
		{
			newLeafNode(lv_focus_43_0, grammarAccess.getAgentAccess().getFocusATOMTerminalRuleCall_3_2_7_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"focus",
        		lv_focus_43_0, 
        		"ATOM");
	    }

)
)(	otherlv_44='@' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getAgentAccess().getCommercialAtKeyword_3_2_7_2_1_0());
    }
(
(
		lv_focusNode_45_0=RULE_ATOM
		{
			newLeafNode(lv_focusNode_45_0, grammarAccess.getAgentAccess().getFocusNodeATOMTerminalRuleCall_3_2_7_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"focusNode",
        		lv_focusNode_45_0, 
        		"ATOM");
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_7_2_2_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_47=',' 
    {
    	newLeafNode(otherlv_47, grammarAccess.getAgentAccess().getCommaKeyword_3_2_7_2_2_1());
    }
)+)*)
    |(	otherlv_48='join' 
    {
    	newLeafNode(otherlv_48, grammarAccess.getAgentAccess().getJoinKeyword_3_2_8_0());
    }
	otherlv_49=':' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getAgentAccess().getColonKeyword_3_2_8_1());
    }
((
(
		lv_join_50_0=RULE_ATOM
		{
			newLeafNode(lv_join_50_0, grammarAccess.getAgentAccess().getJoinATOMTerminalRuleCall_3_2_8_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"join",
        		lv_join_50_0, 
        		"ATOM");
	    }

)
)(	otherlv_51='@' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getAgentAccess().getCommercialAtKeyword_3_2_8_2_1_0());
    }
(
(
		lv_joinNode_52_0=RULE_ATOM
		{
			newLeafNode(lv_joinNode_52_0, grammarAccess.getAgentAccess().getJoinNodeATOMTerminalRuleCall_3_2_8_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"joinNode",
        		lv_joinNode_52_0, 
        		"ATOM");
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_8_2_2_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_54=',' 
    {
    	newLeafNode(otherlv_54, grammarAccess.getAgentAccess().getCommaKeyword_3_2_8_2_2_1());
    }
)+)*)
    |(	otherlv_55='roles' 
    {
    	newLeafNode(otherlv_55, grammarAccess.getAgentAccess().getRolesKeyword_3_2_9_0());
    }
	otherlv_56=':' 
    {
    	newLeafNode(otherlv_56, grammarAccess.getAgentAccess().getColonKeyword_3_2_9_1());
    }
((
(
		lv_role_57_0=RULE_ATOM
		{
			newLeafNode(lv_role_57_0, grammarAccess.getAgentAccess().getRoleATOMTerminalRuleCall_3_2_9_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_57_0, 
        		"ATOM");
	    }

)
)	otherlv_58='in' 
    {
    	newLeafNode(otherlv_58, grammarAccess.getAgentAccess().getInKeyword_3_2_9_2_1());
    }
(
(
		lv_group_59_0=RULE_ATOM
		{
			newLeafNode(lv_group_59_0, grammarAccess.getAgentAccess().getGroupATOMTerminalRuleCall_3_2_9_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"group",
        		lv_group_59_0, 
        		"ATOM");
	    }

)
)(	otherlv_60='@' 
    {
    	newLeafNode(otherlv_60, grammarAccess.getAgentAccess().getCommercialAtKeyword_3_2_9_2_3_0());
    }
(
(
		lv_groupNode_61_0=RULE_ATOM
		{
			newLeafNode(lv_groupNode_61_0, grammarAccess.getAgentAccess().getGroupNodeATOMTerminalRuleCall_3_2_9_2_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"groupNode",
        		lv_groupNode_61_0, 
        		"ATOM");
	    }

)
))?(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_9_2_4_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_63=',' 
    {
    	newLeafNode(otherlv_63, grammarAccess.getAgentAccess().getCommaKeyword_3_2_9_2_4_1());
    }
)+)*)
    |(	otherlv_64='debug' 
    {
    	newLeafNode(otherlv_64, grammarAccess.getAgentAccess().getDebugKeyword_3_2_10_0());
    }
	otherlv_65=':' 
    {
    	newLeafNode(otherlv_65, grammarAccess.getAgentAccess().getColonKeyword_3_2_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getDebugLiteralParserRuleCall_3_2_10_2_0()); 
	    }
		lv_debug_66_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"debug",
        		lv_debug_66_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_10_3_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_68=',' 
    {
    	newLeafNode(otherlv_68, grammarAccess.getAgentAccess().getCommaKeyword_3_2_10_3_1());
    }
)+)
    |(	otherlv_69='verbose' 
    {
    	newLeafNode(otherlv_69, grammarAccess.getAgentAccess().getVerboseKeyword_3_2_11_0());
    }
	otherlv_70=':' 
    {
    	newLeafNode(otherlv_70, grammarAccess.getAgentAccess().getColonKeyword_3_2_11_1());
    }
(
(
		lv_verbose_71_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_verbose_71_0, grammarAccess.getAgentAccess().getVerboseINT_LITERALTerminalRuleCall_3_2_11_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"verbose",
        		lv_verbose_71_0, 
        		"INT_LITERAL");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_11_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_73='nrcbp' 
    {
    	newLeafNode(otherlv_73, grammarAccess.getAgentAccess().getNrcbpKeyword_3_2_12_0());
    }
	otherlv_74=':' 
    {
    	newLeafNode(otherlv_74, grammarAccess.getAgentAccess().getColonKeyword_3_2_12_1());
    }
(
(
		lv_nrcbp_75_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_nrcbp_75_0, grammarAccess.getAgentAccess().getNrcbpINT_LITERALTerminalRuleCall_3_2_12_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"nrcbp",
        		lv_nrcbp_75_0, 
        		"INT_LITERAL");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_12_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_77='events' 
    {
    	newLeafNode(otherlv_77, grammarAccess.getAgentAccess().getEventsKeyword_3_2_13_0());
    }
	otherlv_78=':' 
    {
    	newLeafNode(otherlv_78, grammarAccess.getAgentAccess().getColonKeyword_3_2_13_1());
    }
(	otherlv_79='discard' 
    {
    	newLeafNode(otherlv_79, grammarAccess.getAgentAccess().getDiscardKeyword_3_2_13_2_0());
    }

    |	otherlv_80='requeue' 
    {
    	newLeafNode(otherlv_80, grammarAccess.getAgentAccess().getRequeueKeyword_3_2_13_2_1());
    }

    |	otherlv_81='retrieve' 
    {
    	newLeafNode(otherlv_81, grammarAccess.getAgentAccess().getRetrieveKeyword_3_2_13_2_2());
    }
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_13_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_83='intBels' 
    {
    	newLeafNode(otherlv_83, grammarAccess.getAgentAccess().getIntBelsKeyword_3_2_14_0());
    }
	otherlv_84=':' 
    {
    	newLeafNode(otherlv_84, grammarAccess.getAgentAccess().getColonKeyword_3_2_14_1());
    }
(	otherlv_85='sameFocus' 
    {
    	newLeafNode(otherlv_85, grammarAccess.getAgentAccess().getSameFocusKeyword_3_2_14_2_0());
    }

    |	otherlv_86='newFocus' 
    {
    	newLeafNode(otherlv_86, grammarAccess.getAgentAccess().getNewFocusKeyword_3_2_14_2_1());
    }
)(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_14_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |((
(
		lv_other_88_0=RULE_ATOM
		{
			newLeafNode(lv_other_88_0, grammarAccess.getAgentAccess().getOtherATOMTerminalRuleCall_3_2_15_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"other",
        		lv_other_88_0, 
        		"ATOM");
	    }

)
)	otherlv_89=':' 
    {
    	newLeafNode(otherlv_89, grammarAccess.getAgentAccess().getColonKeyword_3_2_15_1());
    }
((
(
		lv_string_90_0=RULE_STRING
		{
			newLeafNode(lv_string_90_0, grammarAccess.getAgentAccess().getStringSTRINGTerminalRuleCall_3_2_15_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_90_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_val_91_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_91_0, grammarAccess.getAgentAccess().getValINT_LITERALTerminalRuleCall_3_2_15_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_91_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentAccess().getLiteralLiteralParserRuleCall_3_2_15_2_2_0()); 
	    }
		lv_literal_92_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentRule());
	        }
       		add(
       			$current, 
       			"literal",
        		lv_literal_92_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_real_93_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_93_0, grammarAccess.getAgentAccess().getVal_realREAL_LITERALTerminalRuleCall_3_2_15_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgentRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_93_0, 
        		"REAL_LITERAL");
	    }

)
))(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_3_2_15_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+))*	otherlv_95='}' 
    {
    	newLeafNode(otherlv_95, grammarAccess.getAgentAccess().getRightCurlyBracketKeyword_3_3());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getEOLParserRuleCall_4()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleWorkspace
entryRuleWorkspace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWorkspaceRule()); }
	 iv_ruleWorkspace=ruleWorkspace 
	 { $current=$iv_ruleWorkspace.current; } 
	 EOF 
;

// Rule Workspace
ruleWorkspace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='workspace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWorkspaceAccess().getWorkspaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getWorkspaceAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkspaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWorkspaceAccess().getLeftCurlyBracketKeyword_2());
    }
(
    { 
        newCompositeNode(grammarAccess.getWorkspaceAccess().getEOLParserRuleCall_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getWorkspaceAccess().getArtifactArtifactParserRuleCall_4_0_0()); 
	    }
		lv_artifact_4_0=ruleArtifact		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkspaceRule());
	        }
       		add(
       			$current, 
       			"artifact",
        		lv_artifact_4_0, 
        		"Artifact");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_5='agents' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWorkspaceAccess().getAgentsKeyword_4_1_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWorkspaceAccess().getColonKeyword_4_1_1());
    }
(((
(
		lv_agent_7_0=RULE_ATOM
		{
			newLeafNode(lv_agent_7_0, grammarAccess.getWorkspaceAccess().getAgentATOMTerminalRuleCall_4_1_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWorkspaceRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"agent",
        		lv_agent_7_0, 
        		"ATOM");
	    }

)
)
    |	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getWorkspaceAccess().getAsteriskKeyword_4_1_2_0_1());
    }
)(
    { 
        newCompositeNode(grammarAccess.getWorkspaceAccess().getEOLParserRuleCall_4_1_2_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getWorkspaceAccess().getCommaKeyword_4_1_2_1_1());
    }
)+)*)
    |(	otherlv_11='debug' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getWorkspaceAccess().getDebugKeyword_4_2_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getWorkspaceAccess().getEOLParserRuleCall_4_2_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getWorkspaceAccess().getNodeONodeParserRuleCall_4_3_0()); 
	    }
		lv_node_13_0=ruleONode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWorkspaceRule());
	        }
       		add(
       			$current, 
       			"node",
        		lv_node_13_0, 
        		"ONode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getWorkspaceAccess().getRightCurlyBracketKeyword_5());
    }
(
    { 
        newCompositeNode(grammarAccess.getWorkspaceAccess().getEOLParserRuleCall_6()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleArtifact
entryRuleArtifact returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArtifactRule()); }
	 iv_ruleArtifact=ruleArtifact 
	 { $current=$iv_ruleArtifact.current; } 
	 EOF 
;

// Rule Artifact
ruleArtifact returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='artifact' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArtifactAccess().getArtifactKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getArtifactAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArtifactAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArtifactAccess().getClassDefClassDefParserRuleCall_3_0()); 
	    }
		lv_classDef_3_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArtifactRule());
	        }
       		set(
       			$current, 
       			"classDef",
        		lv_classDef_3_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArtifactAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getEOLParserRuleCall_4_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*(	otherlv_6='focused-by' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArtifactAccess().getFocusedByKeyword_4_2_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArtifactAccess().getColonKeyword_4_2_1());
    }
(((
(
		lv_agent_8_0=RULE_ATOM
		{
			newLeafNode(lv_agent_8_0, grammarAccess.getArtifactAccess().getAgentATOMTerminalRuleCall_4_2_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArtifactRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"agent",
        		lv_agent_8_0, 
        		"ATOM");
	    }

)
)
    |	otherlv_9='*' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArtifactAccess().getAsteriskKeyword_4_2_2_0_1());
    }
)(
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getEOLParserRuleCall_4_2_2_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getArtifactAccess().getCommaKeyword_4_2_2_1_1());
    }
)+)*)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getArtifactAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getArtifactAccess().getEOLParserRuleCall_5()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleOrganisation
entryRuleOrganisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrganisationRule()); }
	 iv_ruleOrganisation=ruleOrganisation 
	 { $current=$iv_ruleOrganisation.current; } 
	 EOF 
;

// Rule Organisation
ruleOrganisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='organisation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrganisationAccess().getOrganisationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOrganisationAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganisationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getFileNameOFileNameParserRuleCall_2_0()); 
	    }
		lv_fileName_2_0=ruleOFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		set(
       			$current, 
       			"fileName",
        		lv_fileName_2_0, 
        		"OFileName");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrganisationAccess().getLeftCurlyBracketKeyword_3());
    }
(
    { 
        newCompositeNode(grammarAccess.getOrganisationAccess().getEOLParserRuleCall_4()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getGroupGroupParserRuleCall_5_0_0()); 
	    }
		lv_group_5_0=ruleGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		add(
       			$current, 
       			"group",
        		lv_group_5_0, 
        		"Group");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getSchemeSchemeParserRuleCall_5_1_0()); 
	    }
		lv_scheme_6_0=ruleScheme		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		add(
       			$current, 
       			"scheme",
        		lv_scheme_6_0, 
        		"Scheme");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getAgentsOAgentsParserRuleCall_5_2_0()); 
	    }
		lv_agents_7_0=ruleOAgents		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		add(
       			$current, 
       			"agents",
        		lv_agents_7_0, 
        		"OAgents");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getNodeONodeParserRuleCall_5_3_0()); 
	    }
		lv_node_8_0=ruleONode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		add(
       			$current, 
       			"node",
        		lv_node_8_0, 
        		"ONode");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganisationAccess().getOtherOOthersParserRuleCall_5_4_0()); 
	    }
		lv_other_9_0=ruleOOthers		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganisationRule());
	        }
       		add(
       			$current, 
       			"other",
        		lv_other_9_0, 
        		"OOthers");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOrganisationAccess().getRightCurlyBracketKeyword_6());
    }
(
    { 
        newCompositeNode(grammarAccess.getOrganisationAccess().getEOLParserRuleCall_7()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleOFileName
entryRuleOFileName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOFileNameRule()); }
	 iv_ruleOFileName=ruleOFileName 
	 { $current=$iv_ruleOFileName.current; } 
	 EOF 
;

// Rule OFileName
ruleOFileName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOFileNameAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOFileNameAccess().getNameFileNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOFileNameRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleONode
entryRuleONode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getONodeRule()); }
	 iv_ruleONode=ruleONode 
	 { $current=$iv_ruleONode.current; } 
	 EOF 
;

// Rule ONode
ruleONode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='node' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getONodeAccess().getNodeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getONodeAccess().getColonKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ATOM
		{
			newLeafNode(lv_name_2_0, grammarAccess.getONodeAccess().getNameATOMTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getONodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getONodeAccess().getEOLParserRuleCall_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
;





// Entry rule entryRuleOAgents
entryRuleOAgents returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOAgentsRule()); }
	 iv_ruleOAgents=ruleOAgents 
	 { $current=$iv_ruleOAgents.current; } 
	 EOF 
;

// Rule OAgents
ruleOAgents returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOAgentsAccess().getOAgentsAction_0(),
            $current);
    }
)	otherlv_1='agents' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOAgentsAccess().getAgentsKeyword_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOAgentsAccess().getColonKeyword_2());
    }
(((
(
		lv_agent_3_0=RULE_ATOM
		{
			newLeafNode(lv_agent_3_0, grammarAccess.getOAgentsAccess().getAgentATOMTerminalRuleCall_3_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOAgentsRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"agent",
        		lv_agent_3_0, 
        		"ATOM");
	    }

)
)
    |	otherlv_4='*' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOAgentsAccess().getAsteriskKeyword_3_0_1());
    }
)(
    { 
        newCompositeNode(grammarAccess.getOAgentsAccess().getEOLParserRuleCall_3_1_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOAgentsAccess().getCommaKeyword_3_1_1());
    }
)+)*)
;





// Entry rule entryRuleOOthers
entryRuleOOthers returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOOthersRule()); }
	 iv_ruleOOthers=ruleOOthers 
	 { $current=$iv_ruleOOthers.current; } 
	 EOF 
;

// Rule OOthers
ruleOOthers returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ATOM
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOOthersAccess().getNameATOMTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOOthersRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ATOM");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOOthersAccess().getColonKeyword_1());
    }
((
(
		lv_string_2_0=RULE_STRING
		{
			newLeafNode(lv_string_2_0, grammarAccess.getOOthersAccess().getStringSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOOthersRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_val_3_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_3_0, grammarAccess.getOOthersAccess().getValINT_LITERALTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOOthersRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_3_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOOthersAccess().getLiteralLiteralParserRuleCall_2_2_0()); 
	    }
		lv_literal_4_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOOthersRule());
	        }
       		add(
       			$current, 
       			"literal",
        		lv_literal_4_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_real_5_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_5_0, grammarAccess.getOOthersAccess().getVal_realREAL_LITERALTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOOthersRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_5_0, 
        		"REAL_LITERAL");
	    }

)
))(
    { 
        newCompositeNode(grammarAccess.getOOthersAccess().getEOLParserRuleCall_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
;





// Entry rule entryRuleGroup
entryRuleGroup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupRule()); }
	 iv_ruleGroup=ruleGroup 
	 { $current=$iv_ruleGroup.current; } 
	 EOF 
;

// Rule Group
ruleGroup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='group' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGroupAccess().getGroupKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGroupAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupAccess().getColonKeyword_2());
    }
(
(
		lv_kind_3_0=RULE_ATOM
		{
			newLeafNode(lv_kind_3_0, grammarAccess.getGroupAccess().getKindATOMTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"ATOM");
	    }

)
)(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getGroupGroupParserRuleCall_4_2_0_0()); 
	    }
		lv_group_6_0=ruleGroup		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		add(
       			$current, 
       			"group",
        		lv_group_6_0, 
        		"Group");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_7='responsible-for' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupAccess().getResponsibleForKeyword_4_2_1_0());
    }
	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getGroupAccess().getColonKeyword_4_2_1_1());
    }
(
(
		lv_responsibleFor_9_0=RULE_ATOM
		{
			newLeafNode(lv_responsibleFor_9_0, grammarAccess.getGroupAccess().getResponsibleForATOMTerminalRuleCall_4_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"responsibleFor",
        		lv_responsibleFor_9_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_2_1_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_11='owner' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGroupAccess().getOwnerKeyword_4_2_2_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getGroupAccess().getColonKeyword_4_2_2_1());
    }
(
(
		lv_owner_13_0=RULE_ATOM
		{
			newLeafNode(lv_owner_13_0, grammarAccess.getGroupAccess().getOwnerATOMTerminalRuleCall_4_2_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"owner",
        		lv_owner_13_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_2_2_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_15='debug' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getGroupAccess().getDebugKeyword_4_2_3_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_2_3_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |((
(
		lv_other_17_0=RULE_ATOM
		{
			newLeafNode(lv_other_17_0, grammarAccess.getGroupAccess().getOtherATOMTerminalRuleCall_4_2_4_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"other",
        		lv_other_17_0, 
        		"ATOM");
	    }

)
)	otherlv_18=':' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getGroupAccess().getColonKeyword_4_2_4_1());
    }
((
(
		lv_string_19_0=RULE_STRING
		{
			newLeafNode(lv_string_19_0, grammarAccess.getGroupAccess().getStringSTRINGTerminalRuleCall_4_2_4_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_19_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_val_20_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_20_0, grammarAccess.getGroupAccess().getValINT_LITERALTerminalRuleCall_4_2_4_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_20_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupAccess().getLiteralLiteralParserRuleCall_4_2_4_2_2_0()); 
	    }
		lv_literal_21_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupRule());
	        }
       		add(
       			$current, 
       			"literal",
        		lv_literal_21_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_real_22_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_22_0, grammarAccess.getGroupAccess().getVal_realREAL_LITERALTerminalRuleCall_4_2_4_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_22_0, 
        		"REAL_LITERAL");
	    }

)
))(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_2_4_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_24='players' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getGroupAccess().getPlayersKeyword_4_2_5_0());
    }
	otherlv_25=':' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getGroupAccess().getColonKeyword_4_2_5_1());
    }
((
(
		lv_agent_26_0=RULE_ATOM
		{
			newLeafNode(lv_agent_26_0, grammarAccess.getGroupAccess().getAgentATOMTerminalRuleCall_4_2_5_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"agent",
        		lv_agent_26_0, 
        		"ATOM");
	    }

)
)(
(
		lv_role_27_0=RULE_ATOM
		{
			newLeafNode(lv_role_27_0, grammarAccess.getGroupAccess().getRoleATOMTerminalRuleCall_4_2_5_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"role",
        		lv_role_27_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_4_2_5_2_2_0()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_29=',' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getGroupAccess().getCommaKeyword_4_2_5_2_2_1());
    }
)+)*))*	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getGroupAccess().getEOLParserRuleCall_5()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleScheme
entryRuleScheme returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemeRule()); }
	 iv_ruleScheme=ruleScheme 
	 { $current=$iv_ruleScheme.current; } 
	 EOF 
;

// Rule Scheme
ruleScheme returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='scheme' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSchemeAccess().getSchemeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ATOM
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSchemeAccess().getNameATOMTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ATOM");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSchemeAccess().getColonKeyword_2());
    }
(
(
		lv_kind_3_0=RULE_ATOM
		{
			newLeafNode(lv_kind_3_0, grammarAccess.getSchemeAccess().getKindATOMTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"ATOM");
	    }

)
)(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSchemeAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSchemeAccess().getEOLParserRuleCall_4_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*((	otherlv_6='debug' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSchemeAccess().getDebugKeyword_4_2_0_0());
    }
(
    { 
        newCompositeNode(grammarAccess.getSchemeAccess().getEOLParserRuleCall_4_2_0_1()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |(	otherlv_8='owner' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSchemeAccess().getOwnerKeyword_4_2_1_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSchemeAccess().getColonKeyword_4_2_1_1());
    }
(
(
		lv_owner_10_0=RULE_ATOM
		{
			newLeafNode(lv_owner_10_0, grammarAccess.getSchemeAccess().getOwnerATOMTerminalRuleCall_4_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"owner",
        		lv_owner_10_0, 
        		"ATOM");
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getSchemeAccess().getEOLParserRuleCall_4_2_1_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+)
    |((
(
		lv_other_12_0=RULE_ATOM
		{
			newLeafNode(lv_other_12_0, grammarAccess.getSchemeAccess().getOtherATOMTerminalRuleCall_4_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"other",
        		lv_other_12_0, 
        		"ATOM");
	    }

)
)	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSchemeAccess().getColonKeyword_4_2_2_1());
    }
((
(
		lv_string_14_0=RULE_STRING
		{
			newLeafNode(lv_string_14_0, grammarAccess.getSchemeAccess().getStringSTRINGTerminalRuleCall_4_2_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_14_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_val_15_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_15_0, grammarAccess.getSchemeAccess().getValINT_LITERALTerminalRuleCall_4_2_2_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_15_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemeAccess().getLiteralLiteralParserRuleCall_4_2_2_2_2_0()); 
	    }
		lv_literal_16_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemeRule());
	        }
       		add(
       			$current, 
       			"literal",
        		lv_literal_16_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_real_17_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_17_0, grammarAccess.getSchemeAccess().getVal_realREAL_LITERALTerminalRuleCall_4_2_2_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSchemeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_17_0, 
        		"REAL_LITERAL");
	    }

)
))(
    { 
        newCompositeNode(grammarAccess.getSchemeAccess().getEOLParserRuleCall_4_2_2_3()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)+))*	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSchemeAccess().getRightCurlyBracketKeyword_4_3());
    }
)?(
    { 
        newCompositeNode(grammarAccess.getSchemeAccess().getEOLParserRuleCall_5()); 
    }
ruleEOL
    { 
        afterParserOrEnumRuleCall();
    }
)*)
;





// Entry rule entryRuleHost
entryRuleHost returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHostRule()); }
	 iv_ruleHost=ruleHost 
	 { $current=$iv_ruleHost.current; } 
	 EOF 
;

// Rule Host
ruleHost returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ATOM
		{
			newLeafNode(lv_name_0_0, grammarAccess.getHostAccess().getNameATOMTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ATOM");
	    }

)
)
    |(
(
		lv_string_1_0=RULE_STRING
		{
			newLeafNode(lv_string_1_0, grammarAccess.getHostAccess().getStringSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_ip_2_0=RULE_IP
		{
			newLeafNode(lv_ip_2_0, grammarAccess.getHostAccess().getIpIPTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ip",
        		lv_ip_2_0, 
        		"IP");
	    }

)
))(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHostAccess().getColonKeyword_1_0());
    }
(
(
		lv_val_4_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_4_0, grammarAccess.getHostAccess().getValINT_LITERALTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHostRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_4_0, 
        		"INT_LITERAL");
	    }

)
))?)
;





// Entry rule entryRuleFileName
entryRuleFileName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileNameRule()); }
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current; } 
	 EOF 
;

// Rule FileName
ruleFileName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFileNameAccess().getFileNameAction_0(),
            $current);
    }
)((	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileNameAccess().getSolidusKeyword_1_0_0());
    }

    |	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFileNameAccess().getHyphenMinusKeyword_1_0_1());
    }

    |	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFileNameAccess().getFullStopKeyword_1_0_2());
    }

    |	otherlv_4='..' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFileNameAccess().getFullStopFullStopKeyword_1_0_3());
    }

    |(
(
		lv_name_5_0=RULE_ATOM
		{
			newLeafNode(lv_name_5_0, grammarAccess.getFileNameAccess().getNameATOMTerminalRuleCall_1_0_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ATOM");
	    }

)
))+
    |(
(
		lv_string_6_0=RULE_STRING
		{
			newLeafNode(lv_string_6_0, grammarAccess.getFileNameAccess().getStringSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_6_0, 
        		"STRING");
	    }

)
)))
;





// Entry rule entryRuleClassDef
entryRuleClassDef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDefRule()); }
	 iv_ruleClassDef=ruleClassDef 
	 { $current=$iv_ruleClassDef.current; } 
	 EOF 
;

// Rule ClassDef
ruleClassDef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDefAccess().getInfrastructureFQNParserRuleCall_0_0()); 
	    }
		lv_infrastructure_0_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDefRule());
	        }
       		set(
       			$current, 
       			"infrastructure",
        		lv_infrastructure_0_0, 
        		"FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassDefAccess().getLeftParenthesisKeyword_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassDefAccess().getParameterParameterParserRuleCall_1_1_0_0()); 
	    }
		lv_parameter_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_2_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassDefAccess().getCommaKeyword_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDefAccess().getParameterParameterParserRuleCall_1_1_1_1_0()); 
	    }
		lv_parameter_4_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDefRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_4_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClassDefAccess().getRightParenthesisKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getClassDefClassDefParserRuleCall_0_0()); 
	    }
		lv_classDef_0_0=ruleClassDef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"classDef",
        		lv_classDef_0_0, 
        		"ClassDef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_val_1_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_1_0, grammarAccess.getParameterAccess().getValINT_LITERALTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_1_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		lv_val_real_2_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_2_0, grammarAccess.getParameterAccess().getVal_realREAL_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_2_0, 
        		"REAL_LITERAL");
	    }

)
)
    |(
(
		lv_string_3_0=RULE_STRING
		{
			newLeafNode(lv_string_3_0, grammarAccess.getParameterAccess().getStringSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_3_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getListParametersListParametersParserRuleCall_4_0()); 
	    }
		lv_listParameters_4_0=ruleListParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"listParameters",
        		lv_listParameters_4_0, 
        		"ListParameters");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListParameters
entryRuleListParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListParametersRule()); }
	 iv_ruleListParameters=ruleListParameters 
	 { $current=$iv_ruleListParameters.current; } 
	 EOF 
;

// Rule ListParameters
ruleListParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListParametersAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListParametersAccess().getParameterParameterParserRuleCall_1_0()); 
	    }
		lv_parameter_1_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListParametersRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_1_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListParametersAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListParametersAccess().getParameterParameterParserRuleCall_2_1_0()); 
	    }
		lv_parameter_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListParametersRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListParametersAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralAccess().getLiteralAction_0(),
            $current);
    }
)(((	otherlv_1='~' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getTildeKeyword_1_0_0());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getPredPredParserRuleCall_1_0_1_0_0()); 
	    }
		lv_pred_2_0=rulePred		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		set(
       			$current, 
       			"pred",
        		lv_pred_2_0, 
        		"Pred");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getVarVarParserRuleCall_1_0_1_1_0()); 
	    }
		lv_var_3_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_3_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |	otherlv_4='true' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLiteralAccess().getTrueKeyword_1_1());
    }

    |	otherlv_5='false' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLiteralAccess().getFalseKeyword_1_2());
    }
))
;





// Entry rule entryRulePred
entryRulePred returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredRule()); }
	 iv_rulePred=rulePred 
	 { $current=$iv_rulePred.current; } 
	 EOF 
;

// Rule Pred
rulePred returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPredAccess().getPredAction_0(),
            $current);
    }
)((
(
		lv_atom_1_0=RULE_ATOM
		{
			newLeafNode(lv_atom_1_0, grammarAccess.getPredAccess().getAtomATOMTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"atom",
        		lv_atom_1_0, 
        		"ATOM");
	    }

)
)
    |	otherlv_2='begin' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredAccess().getBeginKeyword_1_1());
    }

    |	otherlv_3='end' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPredAccess().getEndKeyword_1_2());
    }
)(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredAccess().getTermsTermsParserRuleCall_2_1_0()); 
	    }
		lv_terms_5_0=ruleTerms		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredRule());
	        }
       		set(
       			$current, 
       			"terms",
        		lv_terms_5_0, 
        		"Terms");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPredAccess().getRightParenthesisKeyword_2_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPredAccess().getListListParserRuleCall_3_0()); 
	    }
		lv_list_7_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_7_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTerms
entryRuleTerms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermsRule()); }
	 iv_ruleTerms=ruleTerms 
	 { $current=$iv_ruleTerms.current; } 
	 EOF 
;

// Rule Terms
ruleTerms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermsAccess().getTermTermParserRuleCall_0_0()); 
	    }
		lv_term_0_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsRule());
	        }
       		add(
       			$current, 
       			"term",
        		lv_term_0_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTermsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermsAccess().getTermTermParserRuleCall_1_1_0()); 
	    }
		lv_term_2_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermsRule());
	        }
       		add(
       			$current, 
       			"term",
        		lv_term_2_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getListListParserRuleCall_0_0()); 
	    }
		lv_list_0_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_0_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getLiteralLiteralParserRuleCall_1_0()); 
	    }
		lv_literal_1_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_1_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_string_2_0=RULE_STRING
		{
			newLeafNode(lv_string_2_0, grammarAccess.getTermAccess().getStringSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"string",
        		lv_string_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_val_3_0=RULE_INT_LITERAL
		{
			newLeafNode(lv_val_3_0, grammarAccess.getTermAccess().getValINT_LITERALTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_3_0, 
        		"INT_LITERAL");
	    }

)
)
    |(
(
		lv_val_real_4_0=RULE_REAL_LITERAL
		{
			newLeafNode(lv_val_real_4_0, grammarAccess.getTermAccess().getVal_realREAL_LITERALTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"val_real",
        		lv_val_real_4_0, 
        		"REAL_LITERAL");
	    }

)
))
;





// Entry rule entryRuleList
entryRuleList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRule()); }
	 iv_ruleList=ruleList 
	 { $current=$iv_ruleList.current; } 
	 EOF 
;

// Rule List
ruleList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListAccess().getListAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getTermTermParserRuleCall_2_0_0()); 
	    }
		lv_term_2_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"term",
        		lv_term_2_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getTermTermParserRuleCall_2_1_1_0()); 
	    }
		lv_term_4_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		add(
       			$current, 
       			"term",
        		lv_term_4_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListAccess().getVerticalLineKeyword_2_2_0());
    }
((
(
		lv_var_6_0=RULE_VART
		{
			newLeafNode(lv_var_6_0, grammarAccess.getListAccess().getVarVARTTerminalRuleCall_2_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"var",
        		lv_var_6_0, 
        		"VART");
	    }

)
)
    |(
(
		lv_unnamedvar_7_0=RULE_UNNAMEDVART
		{
			newLeafNode(lv_unnamedvar_7_0, grammarAccess.getListAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_2_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unnamedvar",
        		lv_unnamedvar_7_0, 
        		"UNNAMEDVART");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getListAccess().getListListParserRuleCall_2_2_1_2_0()); 
	    }
		lv_list_8_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_8_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getListAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	 iv_ruleVar=ruleVar 
	 { $current=$iv_ruleVar.current; } 
	 EOF 
;

// Rule Var
ruleVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_var_0_0=RULE_VART
		{
			newLeafNode(lv_var_0_0, grammarAccess.getVarAccess().getVarVARTTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"var",
        		lv_var_0_0, 
        		"VART");
	    }

)
)
    |(
(
		lv_unnamedvar_1_0=RULE_UNNAMEDVART
		{
			newLeafNode(lv_unnamedvar_1_0, grammarAccess.getVarAccess().getUnnamedvarUNNAMEDVARTTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"unnamedvar",
        		lv_unnamedvar_1_0, 
        		"UNNAMEDVART");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getVarAccess().getListListParserRuleCall_1_0()); 
	    }
		lv_list_2_0=ruleList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarRule());
	        }
       		set(
       			$current, 
       			"list",
        		lv_list_2_0, 
        		"List");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleEOL
entryRuleEOL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEOLRule()); } 
	 iv_ruleEOL=ruleEOL 
	 { $current=$iv_ruleEOL.current.getText(); }  
	 EOF 
;

// Rule EOL
ruleEOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_NEWLINE_0=RULE_NEWLINE    {
		$current.merge(this_NEWLINE_0);
    }

    { 
    newLeafNode(this_NEWLINE_0, grammarAccess.getEOLAccess().getNEWLINETerminalRuleCall_0()); 
    }

    |    this_SL_COMMENT_1=RULE_SL_COMMENT    {
		$current.merge(this_SL_COMMENT_1);
    }

    { 
    newLeafNode(this_SL_COMMENT_1, grammarAccess.getEOLAccess().getSL_COMMENTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_VART_0=RULE_VART    {
		$current.merge(this_VART_0);
    }

    { 
    newLeafNode(this_VART_0, grammarAccess.getFQNAccess().getVARTTerminalRuleCall_0_0()); 
    }

    |    this_ATOM_1=RULE_ATOM    {
		$current.merge(this_ATOM_1);
    }

    { 
    newLeafNode(this_ATOM_1, grammarAccess.getFQNAccess().getATOMTerminalRuleCall_0_1()); 
    }
)(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
(    this_VART_3=RULE_VART    {
		$current.merge(this_VART_3);
    }

    { 
    newLeafNode(this_VART_3, grammarAccess.getFQNAccess().getVARTTerminalRuleCall_1_1_0()); 
    }

    |    this_ATOM_4=RULE_ATOM    {
		$current.merge(this_ATOM_4);
    }

    { 
    newLeafNode(this_ATOM_4, grammarAccess.getFQNAccess().getATOMTerminalRuleCall_1_1_1()); 
    }
))*)
    ;





RULE_IP : RULE_INT_LITERAL+ '.' RULE_INT_LITERAL+ '.' RULE_INT_LITERAL+ '.' RULE_INT_LITERAL+;

RULE_ATOM : (RULE_LCLETTER|'.' RULE_CHAR) (RULE_CHAR|'.' RULE_CHAR)*;

RULE_VART : RULE_UCLETTER RULE_CHAR*;

RULE_UNNAMEDVART : '_' RULE_CHAR*;

fragment RULE_CHAR : (RULE_LETTER|RULE_DIGIT|'_');

fragment RULE_LETTER : (RULE_LCLETTER|RULE_UCLETTER);

fragment RULE_LCLETTER : 'a'..'z';

fragment RULE_UCLETTER : 'A'..'Z';

fragment RULE_DIGIT : '0'..'9';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_INT_LITERAL : RULE_INTEGERNUMBER;

RULE_REAL_LITERAL : RULE_INTEGERNUMBER? '.' RULE_INTEGERNUMBER;

fragment RULE_INTEGERNUMBER : ('0'|'1'..'9' ('0'..'9')*|'0' ('0'..'7')+|RULE_HEXPREFIX RULE_HEXDIGIT+);

fragment RULE_HEXPREFIX : ('0x'|'0X');

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_WS : (' '|'\t'|'\r')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_NEWLINE : '\r'? '\n';


